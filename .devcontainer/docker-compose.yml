networks:
  airavata-network:
    driver: bridge
    name: airavata.host
    ipam:
      config:
        - subnet: 192.168.100.0/24
          gateway: 192.168.100.1

volumes:
  db_data:
    driver: local

services:
  devcontainer:
    profiles:
      - development
    build:
      dockerfile: Dockerfile
      target: deps
    volumes:
      - ..:/home/developer/workspace:cached
      - $HOME/.m2:/home/developer/.m2
      - $HOME/.ssh:/home/developer/.ssh
    networks:
      airavata-network:
        ipv4_address: 192.168.100.10
    extra_hosts:
      - "airavata.host:192.168.100.1"
    ports:
      - "7878:7878"   # sharing registry service
      - "8000:8000"   # tunnel service
      - "17000:17000" # tunnel service (ingress)
      - "8050:8050"   # file service
      - "8930:8930"   # api service
      - "9930:9930"   # api service (TLS) !!!
      - "8960:8960"   # cred store service
      - "8962:8962"   # profile service
      - "8970:8970"   # registry service
      - "18800:18800" # agent service (http)
      - "19900:19900" # agent service (gRPC)
      - "18889:18889" # research service (http)
      - "19908:19908" # research service (gRPC)
    command: sleep infinity

  microservices:
    profiles:
      - staging
    build:
      dockerfile: Dockerfile
      target: runner
    volumes:
      - ../vault:/app/vault
    networks:
      airavata-network:
        ipv4_address: 192.168.100.10
    extra_hosts:
      - "airavata.host:192.168.100.1"
    ports:
      - "7878:7878"   # sharing registry service
      - "8000:8000"   # tunnel service
      - "17000:17000" # tunnel service (ingress)
      - "8050:8050"   # file service
      - "8930:8930"   # api service
      - "9930:9930"   # api service (TLS) !!!
      - "8960:8960"   # cred store service
      - "8962:8962"   # profile service
      - "8970:8970"   # registry service
      - "18800:18800" # agent service (http)
      - "19900:19900" # agent service (gRPC)
      - "18889:18889" # research service (http)
      - "19908:19908" # research service (gRPC)
    depends_on:
      - db
      - kafka
      - keycloak
      - rabbitmq
      - sshd

  portals:
    build: portals
    volumes:
      - /tmp:/tmp
      - ./portals/pga_config.php:/var/www/html/default/config/pga_config.php
    networks:
      airavata-network:
        ipv4_address: 192.168.100.18
    extra_hosts:
      - "airavata.host:192.168.100.1"

  proxy:
    image: nginx/nginx-ingress
    ports:
      - "8443:8443" # https keycloak
      - "5173:5173" # https research portal
      - "8008:8008" # https php portal
      - "8009:8009" # https django portal
    environment:
      RESEARCH_PORTAL_ADDR: "portals:5173"
      PHP_PORTAL_ADDR: "portals:8008"
      DJANGO_PORTAL_ADDR: "portals:8009"
      KEYCLOAK_ADDR: "keycloak:18080"
    volumes:
      - ../vault:/vault  # requires /vault/server.crt and /vault/server.key for ssl termination
      - ./proxy/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
    networks:
      airavata-network:
        ipv4_address: 192.168.100.18
    extra_hosts:
      - "airavata.host:192.168.100.1"

  keycloak:
    image: keycloak/keycloak:25.0
    restart: always
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "18080:18080"
    volumes:
      - ./keycloak/realm-default.json:/opt/keycloak/data/import/realm-default.json
      - ./keycloak/keycloak.conf:/opt/keycloak/conf/keycloak.conf
    command: [ "start", "--import-realm" ]
    networks:
      airavata-network:
        ipv4_address: 192.168.100.11
    extra_hosts:
      - "airavata.host:192.168.100.1"

  db:
    image: mariadb:10.4.13
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: airavata
      MYSQL_PASSWORD: 123456
    volumes:
      - ./database_scripts/init:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    ports:
      - "13306:3306"
    command:
      [
        "mysqld",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
        "--sql-mode=NO_ENGINE_SUBSTITUTION",
      ]
    networks:
      airavata-network:
        ipv4_address: 192.168.100.12
    extra_hosts:
      - "airavata.host:192.168.100.1"

  rabbitmq:
    image: rabbitmq:4.0-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_VHOST: develop
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      airavata-network:
        ipv4_address: 192.168.100.13
    extra_hosts:
      - "airavata.host:192.168.100.1"

  zookeeper:
    image: zookeeper
    restart: always
    hostname: zk
    ports:
      - "2181:2181"
    networks:
      airavata-network:
        ipv4_address: 192.168.100.14
    extra_hosts:
      - "airavata.host:192.168.100.1"

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.100.15
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      airavata-network:
        ipv4_address: 192.168.100.15
    extra_hosts:
      - "airavata.host:192.168.100.1"

  kafka-rest:
    image: confluentinc/cp-kafka-rest:latest
    restart: always
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: 192.168.100.19
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      airavata-network:
        ipv4_address: 192.168.100.19
    extra_hosts:
      - "airavata.host:192.168.100.1"

  sshd:
    image: panubo/sshd
    restart: always
    volumes:
      - /tmp:/tmp
    ports:
      - "22222:22"
    networks:
      airavata-network:
        ipv4_address: 192.168.100.16
    extra_hosts:
      - "airavata.host:192.168.100.1"

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "18088:8080"
    depends_on:
      - db
    networks:
      airavata-network:
        ipv4_address: 192.168.100.17
    extra_hosts:
      - "airavata.host:192.168.100.1"
