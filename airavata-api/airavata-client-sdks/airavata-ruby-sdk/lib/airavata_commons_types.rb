#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

class ErrorModel
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ERRORID = 1
  CREATIONTIME = 2
  ACTUALERRORMESSAGE = 3
  USERFRIENDLYMESSAGE = 4
  TRANSIENTORPERSISTENT = 5
  ROOTCAUSEERRORIDLIST = 6

  FIELDS = {
    ERRORID => {:type => ::Thrift::Types::STRING, :name => 'errorId', :default => %q"DO_NOT_SET_AT_CLIENTS"},
    CREATIONTIME => {:type => ::Thrift::Types::I64, :name => 'creationTime', :optional => true},
    ACTUALERRORMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'actualErrorMessage', :optional => true},
    USERFRIENDLYMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'userFriendlyMessage', :optional => true},
    TRANSIENTORPERSISTENT => {:type => ::Thrift::Types::BOOL, :name => 'transientOrPersistent', :default => false, :optional => true},
    ROOTCAUSEERRORIDLIST => {:type => ::Thrift::Types::LIST, :name => 'rootCauseErrorIdList', :element => {:type => ::Thrift::Types::STRING}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field errorId is unset!') unless @errorId
  end

  ::Thrift::Struct.generate_accessors self
end

# This data structure can be used to store the validation results
# captured during validation step and during the launchExperiment
# operation it can be easilly checked to see the errors occured
# during the experiment launch operation
# 
class ValidatorResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESULT = 1
  ERRORDETAILS = 2

  FIELDS = {
    RESULT => {:type => ::Thrift::Types::BOOL, :name => 'result'},
    ERRORDETAILS => {:type => ::Thrift::Types::STRING, :name => 'errorDetails', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field result is unset!') if @result.nil?
  end

  ::Thrift::Struct.generate_accessors self
end

class ValidationResults
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VALIDATIONSTATE = 1
  VALIDATIONRESULTLIST = 2

  FIELDS = {
    VALIDATIONSTATE => {:type => ::Thrift::Types::BOOL, :name => 'validationState'},
    VALIDATIONRESULTLIST => {:type => ::Thrift::Types::LIST, :name => 'validationResultList', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ValidatorResult}}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field validationState is unset!') if @validationState.nil?
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field validationResultList is unset!') unless @validationResultList
  end

  ::Thrift::Struct.generate_accessors self
end

