#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require_relative 'airavata_commons_types'


module Status
  ACTIVE = 0
  CONFIRMED = 1
  APPROVED = 2
  DELETED = 3
  DUPLICATE = 4
  GRACE_PERIOD = 5
  INVITED = 6
  DENIED = 7
  PENDING = 8
  PENDING_APPROVAL = 9
  PENDING_CONFIRMATION = 10
  SUSPENDED = 11
  DECLINED = 12
  EXPIRED = 13
  VALUE_MAP = {0 => "ACTIVE", 1 => "CONFIRMED", 2 => "APPROVED", 3 => "DELETED", 4 => "DUPLICATE", 5 => "GRACE_PERIOD", 6 => "INVITED", 7 => "DENIED", 8 => "PENDING", 9 => "PENDING_APPROVAL", 10 => "PENDING_CONFIRMATION", 11 => "SUSPENDED", 12 => "DECLINED", 13 => "EXPIRED"}
  VALID_VALUES = Set.new([ACTIVE, CONFIRMED, APPROVED, DELETED, DUPLICATE, GRACE_PERIOD, INVITED, DENIED, PENDING, PENDING_APPROVAL, PENDING_CONFIRMATION, SUSPENDED, DECLINED, EXPIRED]).freeze
end

module USCitizenship
  US_CITIZEN = 0
  US_PERMANENT_RESIDENT = 1
  OTHER_NON_US_CITIZEN = 2
  VALUE_MAP = {0 => "US_CITIZEN", 1 => "US_PERMANENT_RESIDENT", 2 => "OTHER_NON_US_CITIZEN"}
  VALID_VALUES = Set.new([US_CITIZEN, US_PERMANENT_RESIDENT, OTHER_NON_US_CITIZEN]).freeze
end

module Ethnicity
  HISPANIC_LATINO = 0
  NOT_HISPANIC_LATINO = 1
  VALUE_MAP = {0 => "HISPANIC_LATINO", 1 => "NOT_HISPANIC_LATINO"}
  VALID_VALUES = Set.new([HISPANIC_LATINO, NOT_HISPANIC_LATINO]).freeze
end

module Race
  ASIAN = 0
  AMERICAN_INDIAN_OR_ALASKAN_NATIVE = 1
  BLACK_OR_AFRICAN_AMERICAN = 2
  NATIVE_HAWAIIAN_OR_PACIFIC_ISLANDER = 3
  WHITE = 4
  VALUE_MAP = {0 => "ASIAN", 1 => "AMERICAN_INDIAN_OR_ALASKAN_NATIVE", 2 => "BLACK_OR_AFRICAN_AMERICAN", 3 => "NATIVE_HAWAIIAN_OR_PACIFIC_ISLANDER", 4 => "WHITE"}
  VALID_VALUES = Set.new([ASIAN, AMERICAN_INDIAN_OR_ALASKAN_NATIVE, BLACK_OR_AFRICAN_AMERICAN, NATIVE_HAWAIIAN_OR_PACIFIC_ISLANDER, WHITE]).freeze
end

module Disability
  HEARING_IMAPAIRED = 0
  VISUAL_IMPAIRED = 1
  MOBILITY_OR_ORTHOPEDIC_IMPAIRMENT = 2
  OTHER_IMPAIRMENT = 3
  VALUE_MAP = {0 => "HEARING_IMAPAIRED", 1 => "VISUAL_IMPAIRED", 2 => "MOBILITY_OR_ORTHOPEDIC_IMPAIRMENT", 3 => "OTHER_IMPAIRMENT"}
  VALID_VALUES = Set.new([HEARING_IMAPAIRED, VISUAL_IMPAIRED, MOBILITY_OR_ORTHOPEDIC_IMPAIRMENT, OTHER_IMPAIRMENT]).freeze
end

# A structure holding the NSF Demographic information.
# 
# 
class NSFDemographics
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AIRAVATAINTERNALUSERID = 1
  GENDER = 2
  USCITIZENSHIP = 3
  ETHNICITIES = 4
  RACES = 5
  DISABILITIES = 6

  FIELDS = {
    AIRAVATAINTERNALUSERID => {:type => ::Thrift::Types::STRING, :name => 'airavataInternalUserId', :default => %q"DO_NOT_SET_AT_CLIENTS"},
    GENDER => {:type => ::Thrift::Types::STRING, :name => 'gender', :optional => true},
    USCITIZENSHIP => {:type => ::Thrift::Types::I32, :name => 'usCitizenship', :optional => true, :enum_class => ::USCitizenship},
    ETHNICITIES => {:type => ::Thrift::Types::LIST, :name => 'ethnicities', :element => {:type => ::Thrift::Types::I32, :enum_class => ::Ethnicity}, :optional => true},
    RACES => {:type => ::Thrift::Types::LIST, :name => 'races', :element => {:type => ::Thrift::Types::I32, :enum_class => ::Race}, :optional => true},
    DISABILITIES => {:type => ::Thrift::Types::LIST, :name => 'disabilities', :element => {:type => ::Thrift::Types::I32, :enum_class => ::Disability}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field airavataInternalUserId is unset!') unless @airavataInternalUserId
    unless @usCitizenship.nil? || ::USCitizenship::VALID_VALUES.include?(@usCitizenship)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field usCitizenship!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

# A structure holding the cutomized admin dashboard information.
# 
# 
class CustomDashboard
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AIRAVATAINTERNALUSERID = 1
  EXPERIMENTID = 2
  NAME = 3
  DESCRIPTION = 4
  PROJECT = 5
  OWNER = 6
  APPLICATION = 7
  COMPUTERESOURCE = 8
  JOBNAME = 9
  JOBID = 10
  JOBSTATUS = 11
  JOBCREATIONTIME = 12
  NOTIFICATIONSTO = 13
  WORKINGDIR = 14
  JOBDESCRIPTION = 15
  CREATIONTIME = 16
  LASTMODIFIEDTIME = 17
  WALLTIME = 18
  CPUCOUNT = 19
  NODECOUNT = 20
  QUEUE = 21
  INPUTS = 22
  OUTPUTS = 23
  STORAGEDIR = 24
  ERRORS = 25

  FIELDS = {
    AIRAVATAINTERNALUSERID => {:type => ::Thrift::Types::STRING, :name => 'airavataInternalUserId', :default => %q"DO_NOT_SET_AT_CLIENTS"},
    EXPERIMENTID => {:type => ::Thrift::Types::STRING, :name => 'experimentId', :optional => true},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
    DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true},
    PROJECT => {:type => ::Thrift::Types::STRING, :name => 'project', :optional => true},
    OWNER => {:type => ::Thrift::Types::STRING, :name => 'owner', :optional => true},
    APPLICATION => {:type => ::Thrift::Types::STRING, :name => 'application', :optional => true},
    COMPUTERESOURCE => {:type => ::Thrift::Types::STRING, :name => 'computeResource', :optional => true},
    JOBNAME => {:type => ::Thrift::Types::STRING, :name => 'jobName', :optional => true},
    JOBID => {:type => ::Thrift::Types::STRING, :name => 'jobId', :optional => true},
    JOBSTATUS => {:type => ::Thrift::Types::STRING, :name => 'jobStatus', :optional => true},
    JOBCREATIONTIME => {:type => ::Thrift::Types::STRING, :name => 'jobCreationTime', :optional => true},
    NOTIFICATIONSTO => {:type => ::Thrift::Types::STRING, :name => 'notificationsTo', :optional => true},
    WORKINGDIR => {:type => ::Thrift::Types::STRING, :name => 'workingDir', :optional => true},
    JOBDESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'jobDescription', :optional => true},
    CREATIONTIME => {:type => ::Thrift::Types::STRING, :name => 'creationTime', :optional => true},
    LASTMODIFIEDTIME => {:type => ::Thrift::Types::STRING, :name => 'lastModifiedTime', :optional => true},
    WALLTIME => {:type => ::Thrift::Types::STRING, :name => 'wallTime', :optional => true},
    CPUCOUNT => {:type => ::Thrift::Types::STRING, :name => 'cpuCount', :optional => true},
    NODECOUNT => {:type => ::Thrift::Types::STRING, :name => 'nodeCount', :optional => true},
    QUEUE => {:type => ::Thrift::Types::STRING, :name => 'queue', :optional => true},
    INPUTS => {:type => ::Thrift::Types::STRING, :name => 'inputs', :optional => true},
    OUTPUTS => {:type => ::Thrift::Types::STRING, :name => 'outputs', :optional => true},
    STORAGEDIR => {:type => ::Thrift::Types::STRING, :name => 'storageDir', :optional => true},
    ERRORS => {:type => ::Thrift::Types::STRING, :name => 'errors', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field airavataInternalUserId is unset!') unless @airavataInternalUserId
  end

  ::Thrift::Struct.generate_accessors self
end

# * A structure holding the user profile and its child models.
# *
# * Notes:
# *  The model does not include passwords as it is assumed an external identity provider is used to authenticate user.
# *  References:
# *     NSF Demographic Information - http://www.nsf.gov/pubs/2000/00form1225/00form1225.doc
# *     LDAP Schema - https://tools.ietf.org/html/rfc4519
# *     SCIM 2.0 - https://tools.ietf.org/html/rfc7643
# *
# * userModelVersion:
# *  Version number of profile
# *
# * airavataInternalUserId:
# *  internal to Airavata, not intended to be used outside of the Airavata platform or possibly by gateways
# *  (that is, never shown to users), never reassigned, REQUIRED
# *
# * userId:
# *  Externally assertable unique identifier. SAML (primarly in higher education, academic) tends to keep
# *   user name less opaque. OpenID Connect maintains them to be opaque.
# *
# * firstName, middleName, lastName:
# *  First and Last names as assertede by the user
# *
# * namePrefix, nameSuffix:
# *  prefix and suffix to the users name as asserted by the user
# *
# * emails:
# *   Email identifier are Verified, REQUIRED and MULTIVALUED
# *
# * userName:
# *  Name-based identifiers can be multivalues. To keep it simple, Airavata will make it a string.
# *   In the future these can be enumerated as:
#     *   Official name (as asserted possibly by some external identity provider)
#     *   Prefered name (as asserted or suggested by user directly)
#     *   Components:
#     *      givenName
#     *      surname (familyName)
#     *      displayName (often asserted by user to handle things like middle names, suffix, prefix, and the like)
# *
# * orcidId: ORCID ID - http://orcid.org/about/what-is-orcid)
# *
# * phones: Telephone MULTIVALUED
# *
# * country: Country of Residance
# *
# * nationality Countries of citizenship
# *
# * comments:
# *   Free-form information (treated as opaque by Airavata and simply passed to resource).
# *
# * labeledURI:
#   * Google Scholar, Web of Science, ACS, e.t.c
# *
# * timeZone:
# *  Userâ€™s preferred timezone - IANA Timezone Databases - http://www.iana.org/time-zones.
# *
class UserProfile
  include ::Thrift::Struct, ::Thrift::Struct_Union
  USERMODELVERSION = 1
  AIRAVATAINTERNALUSERID = 2
  USERID = 3
  GATEWAYID = 4
  EMAILS = 5
  FIRSTNAME = 6
  LASTNAME = 7
  MIDDLENAME = 8
  NAMEPREFIX = 9
  NAMESUFFIX = 10
  ORCIDID = 11
  PHONES = 12
  COUNTRY = 13
  NATIONALITY = 14
  HOMEORGANIZATION = 15
  ORGINATIONAFFILIATION = 16
  CREATIONTIME = 17
  LASTACCESSTIME = 18
  VALIDUNTIL = 19
  STATE = 20
  COMMENTS = 21
  LABELEDURI = 22
  GPGKEY = 23
  TIMEZONE = 24
  NSFDEMOGRAPHICS = 25
  CUSTOMDASHBOARD = 26

  FIELDS = {
    USERMODELVERSION => {:type => ::Thrift::Types::STRING, :name => 'userModelVersion', :default => %q"1.0"},
    AIRAVATAINTERNALUSERID => {:type => ::Thrift::Types::STRING, :name => 'airavataInternalUserId', :default => %q"DO_NOT_SET_AT_CLIENTS"},
    USERID => {:type => ::Thrift::Types::STRING, :name => 'userId'},
    GATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'gatewayId'},
    EMAILS => {:type => ::Thrift::Types::LIST, :name => 'emails', :element => {:type => ::Thrift::Types::STRING}},
    FIRSTNAME => {:type => ::Thrift::Types::STRING, :name => 'firstName'},
    LASTNAME => {:type => ::Thrift::Types::STRING, :name => 'lastName'},
    MIDDLENAME => {:type => ::Thrift::Types::STRING, :name => 'middleName', :optional => true},
    NAMEPREFIX => {:type => ::Thrift::Types::STRING, :name => 'namePrefix', :optional => true},
    NAMESUFFIX => {:type => ::Thrift::Types::STRING, :name => 'nameSuffix', :optional => true},
    ORCIDID => {:type => ::Thrift::Types::STRING, :name => 'orcidId', :optional => true},
    PHONES => {:type => ::Thrift::Types::LIST, :name => 'phones', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    COUNTRY => {:type => ::Thrift::Types::STRING, :name => 'country', :optional => true},
    NATIONALITY => {:type => ::Thrift::Types::LIST, :name => 'nationality', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    HOMEORGANIZATION => {:type => ::Thrift::Types::STRING, :name => 'homeOrganization', :optional => true},
    ORGINATIONAFFILIATION => {:type => ::Thrift::Types::STRING, :name => 'orginationAffiliation', :optional => true},
    CREATIONTIME => {:type => ::Thrift::Types::I64, :name => 'creationTime'},
    LASTACCESSTIME => {:type => ::Thrift::Types::I64, :name => 'lastAccessTime'},
    VALIDUNTIL => {:type => ::Thrift::Types::I64, :name => 'validUntil'},
    STATE => {:type => ::Thrift::Types::I32, :name => 'State', :enum_class => ::Status},
    COMMENTS => {:type => ::Thrift::Types::STRING, :name => 'comments', :optional => true},
    LABELEDURI => {:type => ::Thrift::Types::LIST, :name => 'labeledURI', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    GPGKEY => {:type => ::Thrift::Types::STRING, :name => 'gpgKey', :optional => true},
    TIMEZONE => {:type => ::Thrift::Types::STRING, :name => 'timeZone', :optional => true},
    NSFDEMOGRAPHICS => {:type => ::Thrift::Types::STRUCT, :name => 'nsfDemographics', :class => ::NSFDemographics, :optional => true},
    CUSTOMDASHBOARD => {:type => ::Thrift::Types::STRUCT, :name => 'customDashboard', :class => ::CustomDashboard, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field userModelVersion is unset!') unless @userModelVersion
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field airavataInternalUserId is unset!') unless @airavataInternalUserId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field userId is unset!') unless @userId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayId is unset!') unless @gatewayId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field emails is unset!') unless @emails
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field firstName is unset!') unless @firstName
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastName is unset!') unless @lastName
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field creationTime is unset!') unless @creationTime
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field lastAccessTime is unset!') unless @lastAccessTime
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field validUntil is unset!') unless @validUntil
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field State is unset!') unless @State
    unless @State.nil? || ::Status::VALID_VALUES.include?(@State)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field State!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

