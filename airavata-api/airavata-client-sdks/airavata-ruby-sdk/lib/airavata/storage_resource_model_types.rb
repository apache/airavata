#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'airavata_commons_types'
require 'data_movement_models_types'


# Storage Resource Description
# 
# storageResourceId: Airavata Internal Unique Identifier to distinguish Compute Resource.
# 
# hostName:
#   Fully Qualified Host Name.
# 
# storageResourceDescription:
#  A user friendly description of the resource.
# 
# 
# DataMovementProtocol:
#  Option to specify a prefered data movement mechanism of the available options.
# 
# 
class StorageResourceDescription
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STORAGERESOURCEID = 1
  HOSTNAME = 2
  STORAGERESOURCEDESCRIPTION = 3
  ENABLED = 4
  DATAMOVEMENTINTERFACES = 5
  CREATIONTIME = 6
  UPDATETIME = 7

  FIELDS = {
    STORAGERESOURCEID => {:type => ::Thrift::Types::STRING, :name => 'storageResourceId', :default => %q"DO_NOT_SET_AT_CLIENTS"},
    HOSTNAME => {:type => ::Thrift::Types::STRING, :name => 'hostName'},
    STORAGERESOURCEDESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'storageResourceDescription', :optional => true},
    ENABLED => {:type => ::Thrift::Types::BOOL, :name => 'enabled', :optional => true},
    DATAMOVEMENTINTERFACES => {:type => ::Thrift::Types::LIST, :name => 'dataMovementInterfaces', :element => {:type => ::Thrift::Types::STRUCT, :class => ::DataMovementInterface}, :optional => true},
    CREATIONTIME => {:type => ::Thrift::Types::I64, :name => 'creationTime', :optional => true},
    UPDATETIME => {:type => ::Thrift::Types::I64, :name => 'updateTime', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field storageResourceId is unset!') unless @storageResourceId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field hostName is unset!') unless @hostName
  end

  ::Thrift::Struct.generate_accessors self
end

