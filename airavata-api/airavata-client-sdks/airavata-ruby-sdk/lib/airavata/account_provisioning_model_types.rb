#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module SSHAccountProvisionerConfigParamType
  STRING = 0
  CRED_STORE_PASSWORD_TOKEN = 1
  VALUE_MAP = {0 => "STRING", 1 => "CRED_STORE_PASSWORD_TOKEN"}
  VALID_VALUES = Set.new([STRING, CRED_STORE_PASSWORD_TOKEN]).freeze
end

class SSHAccountProvisionerConfigParam
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 1
  TYPE = 2
  ISOPTIONAL = 3
  DESCRIPTION = 4

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :default =>     0, :enum_class => ::SSHAccountProvisionerConfigParamType},
    ISOPTIONAL => {:type => ::Thrift::Types::BOOL, :name => 'isOptional', :default => false},
    DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field name is unset!') unless @name
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field type is unset!') unless @type
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field isOptional is unset!') if @isOptional.nil?
    unless @type.nil? || ::SSHAccountProvisionerConfigParamType::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class SSHAccountProvisioner
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 1
  CANCREATEACCOUNT = 2
  CANINSTALLSSHKEY = 3
  CONFIGPARAMS = 4

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    CANCREATEACCOUNT => {:type => ::Thrift::Types::BOOL, :name => 'canCreateAccount'},
    CANINSTALLSSHKEY => {:type => ::Thrift::Types::BOOL, :name => 'canInstallSSHKey'},
    CONFIGPARAMS => {:type => ::Thrift::Types::LIST, :name => 'configParams', :element => {:type => ::Thrift::Types::STRUCT, :class => ::SSHAccountProvisionerConfigParam}}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field name is unset!') unless @name
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field canCreateAccount is unset!') if @canCreateAccount.nil?
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field canInstallSSHKey is unset!') if @canInstallSSHKey.nil?
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field configParams is unset!') unless @configParams
  end

  ::Thrift::Struct.generate_accessors self
end

