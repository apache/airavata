#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require_relative 'airavata_commons_types'


module GatewayApprovalStatus
  REQUESTED = 0
  APPROVED = 1
  ACTIVE = 2
  DEACTIVATED = 3
  CANCELLED = 4
  DENIED = 5
  CREATED = 6
  DEPLOYED = 7
  VALUE_MAP = {0 => "REQUESTED", 1 => "APPROVED", 2 => "ACTIVE", 3 => "DEACTIVATED", 4 => "CANCELLED", 5 => "DENIED", 6 => "CREATED", 7 => "DEPLOYED"}
  VALID_VALUES = Set.new([REQUESTED, APPROVED, ACTIVE, DEACTIVATED, CANCELLED, DENIED, CREATED, DEPLOYED]).freeze
end

module NotificationPriority
  LOW = 0
  NORMAL = 1
  HIGH = 2
  VALUE_MAP = {0 => "LOW", 1 => "NORMAL", 2 => "HIGH"}
  VALID_VALUES = Set.new([LOW, NORMAL, HIGH]).freeze
end

class Group
  include ::Thrift::Struct, ::Thrift::Struct_Union
  GROUPNAME = 1
  DESCRIPTION = 2

  FIELDS = {
    GROUPNAME => {:type => ::Thrift::Types::STRING, :name => 'groupName'},
    DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field groupName is unset!') unless @groupName
  end

  ::Thrift::Struct.generate_accessors self
end

class Project
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PROJECTID = 1
  OWNER = 2
  GATEWAYID = 3
  NAME = 4
  DESCRIPTION = 5
  CREATIONTIME = 6
  SHAREDUSERS = 7
  SHAREDGROUPS = 8

  FIELDS = {
    PROJECTID => {:type => ::Thrift::Types::STRING, :name => 'projectID', :default => %q"DO_NOT_SET_AT_CLIENTS"},
    OWNER => {:type => ::Thrift::Types::STRING, :name => 'owner'},
    GATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'gatewayId'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true},
    CREATIONTIME => {:type => ::Thrift::Types::I64, :name => 'creationTime', :optional => true},
    SHAREDUSERS => {:type => ::Thrift::Types::LIST, :name => 'sharedUsers', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    SHAREDGROUPS => {:type => ::Thrift::Types::LIST, :name => 'sharedGroups', :element => {:type => ::Thrift::Types::STRING}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field projectID is unset!') unless @projectID
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field owner is unset!') unless @owner
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayId is unset!') unless @gatewayId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field name is unset!') unless @name
  end

  ::Thrift::Struct.generate_accessors self
end

class User
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AIRAVATAINTERNALUSERID = 1
  USERNAME = 2
  GATEWAYID = 3
  FIRSTNAME = 4
  LASTNAME = 5
  EMAIL = 6

  FIELDS = {
    AIRAVATAINTERNALUSERID => {:type => ::Thrift::Types::STRING, :name => 'airavataInternalUserId', :default => %q"DO_NOT_SET_AT_CLIENTS"},
    USERNAME => {:type => ::Thrift::Types::STRING, :name => 'userName', :optional => true},
    GATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'gatewayId'},
    FIRSTNAME => {:type => ::Thrift::Types::STRING, :name => 'firstName', :optional => true},
    LASTNAME => {:type => ::Thrift::Types::STRING, :name => 'lastName', :optional => true},
    EMAIL => {:type => ::Thrift::Types::STRING, :name => 'email', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field airavataInternalUserId is unset!') unless @airavataInternalUserId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayId is unset!') unless @gatewayId
  end

  ::Thrift::Struct.generate_accessors self
end

class Gateway
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AIRAVATAINTERNALGATEWAYID = 1
  GATEWAYID = 2
  GATEWAYAPPROVALSTATUS = 3
  GATEWAYNAME = 4
  DOMAIN = 5
  EMAILADDRESS = 6
  GATEWAYACRONYM = 7
  GATEWAYURL = 8
  GATEWAYPUBLICABSTRACT = 9
  REVIEWPROPOSALDESCRIPTION = 10
  GATEWAYADMINFIRSTNAME = 11
  GATEWAYADMINLASTNAME = 12
  GATEWAYADMINEMAIL = 13
  IDENTITYSERVERUSERNAME = 14
  IDENTITYSERVERPASSWORDTOKEN = 15
  DECLINEDREASON = 16
  OAUTHCLIENTID = 17
  OAUTHCLIENTSECRET = 18
  REQUESTCREATIONTIME = 19
  REQUESTERUSERNAME = 20

  FIELDS = {
    AIRAVATAINTERNALGATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'airavataInternalGatewayId', :optional => true},
    GATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'gatewayId'},
    GATEWAYAPPROVALSTATUS => {:type => ::Thrift::Types::I32, :name => 'gatewayApprovalStatus', :enum_class => ::GatewayApprovalStatus},
    GATEWAYNAME => {:type => ::Thrift::Types::STRING, :name => 'gatewayName', :optional => true},
    DOMAIN => {:type => ::Thrift::Types::STRING, :name => 'domain', :optional => true},
    EMAILADDRESS => {:type => ::Thrift::Types::STRING, :name => 'emailAddress', :optional => true},
    GATEWAYACRONYM => {:type => ::Thrift::Types::STRING, :name => 'gatewayAcronym', :optional => true},
    GATEWAYURL => {:type => ::Thrift::Types::STRING, :name => 'gatewayURL', :optional => true},
    GATEWAYPUBLICABSTRACT => {:type => ::Thrift::Types::STRING, :name => 'gatewayPublicAbstract', :optional => true},
    REVIEWPROPOSALDESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'reviewProposalDescription', :optional => true},
    GATEWAYADMINFIRSTNAME => {:type => ::Thrift::Types::STRING, :name => 'gatewayAdminFirstName', :optional => true},
    GATEWAYADMINLASTNAME => {:type => ::Thrift::Types::STRING, :name => 'gatewayAdminLastName', :optional => true},
    GATEWAYADMINEMAIL => {:type => ::Thrift::Types::STRING, :name => 'gatewayAdminEmail', :optional => true},
    IDENTITYSERVERUSERNAME => {:type => ::Thrift::Types::STRING, :name => 'identityServerUserName', :optional => true},
    IDENTITYSERVERPASSWORDTOKEN => {:type => ::Thrift::Types::STRING, :name => 'identityServerPasswordToken', :optional => true},
    DECLINEDREASON => {:type => ::Thrift::Types::STRING, :name => 'declinedReason', :optional => true},
    OAUTHCLIENTID => {:type => ::Thrift::Types::STRING, :name => 'oauthClientId', :optional => true},
    OAUTHCLIENTSECRET => {:type => ::Thrift::Types::STRING, :name => 'oauthClientSecret', :optional => true},
    REQUESTCREATIONTIME => {:type => ::Thrift::Types::I64, :name => 'requestCreationTime', :optional => true},
    REQUESTERUSERNAME => {:type => ::Thrift::Types::STRING, :name => 'requesterUsername', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayId is unset!') unless @gatewayId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayApprovalStatus is unset!') unless @gatewayApprovalStatus
    unless @gatewayApprovalStatus.nil? || ::GatewayApprovalStatus::VALID_VALUES.include?(@gatewayApprovalStatus)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field gatewayApprovalStatus!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GatewayUsageReportingCommand
  include ::Thrift::Struct, ::Thrift::Struct_Union
  GATEWAYID = 1
  COMPUTERESOURCEID = 2
  COMMAND = 3

  FIELDS = {
    GATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'gatewayId'},
    COMPUTERESOURCEID => {:type => ::Thrift::Types::STRING, :name => 'computeResourceId'},
    COMMAND => {:type => ::Thrift::Types::STRING, :name => 'command'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayId is unset!') unless @gatewayId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field computeResourceId is unset!') unless @computeResourceId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field command is unset!') unless @command
  end

  ::Thrift::Struct.generate_accessors self
end

class Notification
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NOTIFICATIONID = 1
  GATEWAYID = 2
  TITLE = 3
  NOTIFICATIONMESSAGE = 4
  CREATIONTIME = 5
  PUBLISHEDTIME = 6
  EXPIRATIONTIME = 7
  PRIORITY = 8

  FIELDS = {
    NOTIFICATIONID => {:type => ::Thrift::Types::STRING, :name => 'notificationId', :optional => true},
    GATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'gatewayId'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    NOTIFICATIONMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'notificationMessage'},
    CREATIONTIME => {:type => ::Thrift::Types::I64, :name => 'creationTime', :optional => true},
    PUBLISHEDTIME => {:type => ::Thrift::Types::I64, :name => 'publishedTime', :optional => true},
    EXPIRATIONTIME => {:type => ::Thrift::Types::I64, :name => 'expirationTime', :optional => true},
    PRIORITY => {:type => ::Thrift::Types::I32, :name => 'priority', :optional => true, :enum_class => ::NotificationPriority}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayId is unset!') unless @gatewayId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field title is unset!') unless @title
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field notificationMessage is unset!') unless @notificationMessage
    unless @priority.nil? || ::NotificationPriority::VALID_VALUES.include?(@priority)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field priority!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

