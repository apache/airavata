#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module SummaryType
  SSH = 0
  PASSWD = 1
  CERT = 2
  VALUE_MAP = {0 => "SSH", 1 => "PASSWD", 2 => "CERT"}
  VALID_VALUES = Set.new([SSH, PASSWD, CERT]).freeze
end

class SSHCredential
  include ::Thrift::Struct, ::Thrift::Struct_Union
  GATEWAYID = 1
  USERNAME = 2
  PASSPHRASE = 3
  PUBLICKEY = 4
  PRIVATEKEY = 5
  PERSISTEDTIME = 6
  TOKEN = 7
  DESCRIPTION = 8

  FIELDS = {
    GATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'gatewayId'},
    USERNAME => {:type => ::Thrift::Types::STRING, :name => 'username'},
    PASSPHRASE => {:type => ::Thrift::Types::STRING, :name => 'passphrase', :optional => true},
    PUBLICKEY => {:type => ::Thrift::Types::STRING, :name => 'publicKey', :optional => true},
    PRIVATEKEY => {:type => ::Thrift::Types::STRING, :name => 'privateKey', :optional => true},
    PERSISTEDTIME => {:type => ::Thrift::Types::I64, :name => 'persistedTime', :optional => true},
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token', :optional => true},
    DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayId is unset!') unless @gatewayId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field username is unset!') unless @username
  end

  ::Thrift::Struct.generate_accessors self
end

class CredentialSummary
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  GATEWAYID = 2
  USERNAME = 3
  PUBLICKEY = 4
  PERSISTEDTIME = 5
  TOKEN = 6
  DESCRIPTION = 7

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::SummaryType},
    GATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'gatewayId'},
    # The username corresponds to the Credential's `portalUserName` which is the username of the user that
# created the credential.
    USERNAME => {:type => ::Thrift::Types::STRING, :name => 'username'},
    PUBLICKEY => {:type => ::Thrift::Types::STRING, :name => 'publicKey', :optional => true},
    PERSISTEDTIME => {:type => ::Thrift::Types::I64, :name => 'persistedTime', :optional => true},
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token'},
    DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field type is unset!') unless @type
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayId is unset!') unless @gatewayId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field username is unset!') unless @username
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field token is unset!') unless @token
    unless @type.nil? || ::SummaryType::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CommunityUser
  include ::Thrift::Struct, ::Thrift::Struct_Union
  GATEWAYNAME = 1
  USERNAME = 2
  USEREMAIL = 3

  FIELDS = {
    GATEWAYNAME => {:type => ::Thrift::Types::STRING, :name => 'gatewayName'},
    USERNAME => {:type => ::Thrift::Types::STRING, :name => 'username'},
    USEREMAIL => {:type => ::Thrift::Types::STRING, :name => 'userEmail'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayName is unset!') unless @gatewayName
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field username is unset!') unless @username
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field userEmail is unset!') unless @userEmail
  end

  ::Thrift::Struct.generate_accessors self
end

class CertificateCredential
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COMMUNITYUSER = 1
  X509CERT = 2
  NOTAFTER = 3
  PRIVATEKEY = 4
  LIFETIME = 5
  NOTBEFORE = 6
  PERSISTEDTIME = 7
  TOKEN = 8

  FIELDS = {
    COMMUNITYUSER => {:type => ::Thrift::Types::STRUCT, :name => 'communityUser', :class => ::CommunityUser},
    X509CERT => {:type => ::Thrift::Types::STRING, :name => 'x509Cert'},
    NOTAFTER => {:type => ::Thrift::Types::STRING, :name => 'notAfter', :optional => true},
    PRIVATEKEY => {:type => ::Thrift::Types::STRING, :name => 'privateKey', :optional => true},
    LIFETIME => {:type => ::Thrift::Types::I64, :name => 'lifeTime', :optional => true},
    NOTBEFORE => {:type => ::Thrift::Types::STRING, :name => 'notBefore', :optional => true},
    PERSISTEDTIME => {:type => ::Thrift::Types::I64, :name => 'persistedTime', :optional => true},
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field communityUser is unset!') unless @communityUser
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field x509Cert is unset!') unless @x509Cert
  end

  ::Thrift::Struct.generate_accessors self
end

class PasswordCredential
  include ::Thrift::Struct, ::Thrift::Struct_Union
  GATEWAYID = 1
  PORTALUSERNAME = 2
  LOGINUSERNAME = 3
  PASSWORD = 4
  DESCRIPTION = 5
  PERSISTEDTIME = 6
  TOKEN = 7

  FIELDS = {
    GATEWAYID => {:type => ::Thrift::Types::STRING, :name => 'gatewayId'},
    PORTALUSERNAME => {:type => ::Thrift::Types::STRING, :name => 'portalUserName'},
    LOGINUSERNAME => {:type => ::Thrift::Types::STRING, :name => 'loginUserName'},
    PASSWORD => {:type => ::Thrift::Types::STRING, :name => 'password'},
    DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true},
    PERSISTEDTIME => {:type => ::Thrift::Types::I64, :name => 'persistedTime', :optional => true},
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field gatewayId is unset!') unless @gatewayId
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field portalUserName is unset!') unless @portalUserName
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field loginUserName is unset!') unless @loginUserName
    raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field password is unset!') unless @password
  end

  ::Thrift::Struct.generate_accessors self
end

