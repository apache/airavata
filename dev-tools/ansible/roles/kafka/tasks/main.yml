#
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

---

# Create the directory
- name: Create directory
  file: path="{{ user_home }}" state=directory owner={{ user }} group={{ group }}

# Check for the availability of the Kafka package
- name: Check kafka package availability
  stat: path={{ kafka_dir }}
  register: kafka_package

# Download Kafka
- name: Download and unarchive Kafka
  unarchive: src="{{ kafka_tgz_url }}"
      dest="{{ user_home }}"
      copy=no
      owner="{{ user }}"
      group="{{ group }}"
  when: not kafka_package.stat.exists
  become: yes

# Create kafka logs directory
- name: Create kafka logs directory
  file: path="{{ kafka_dir }}/logs" state=directory owner={{ user }} group={{ group }}

# Config and start Kafka
- name: Copy kafka server properties file
  template: src=server.properties.j2
            dest="{{ kafka_dir }}/config/server.properties"
            owner={{ user }}
            group={{ group }}
            mode="u=rw,g=r,o=r"
  notify: restart kafka
  become: yes

- name: systemd start script
  template: src=kafka.service.j2
            dest=/usr/lib/systemd/system/kafka.service
            owner={{ user }}
            group={{ group }}
            mode="u=rw,g=r,o=r"
  notify: start kafka
  become: yes

- name: Reload systemd daemons
  command: systemctl daemon-reload
  notify: restart kafka
  become: yes

...
