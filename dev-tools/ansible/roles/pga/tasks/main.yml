---
- name: Create root directory
  file: path="{{ doc_root_dir }}" state=directory
  become: yes

- include: install_deps_{{ ansible_os_family }}.yml

# - name: Check previous deployments
#   stat: path="{{ doc_root_dir }}" get_md5=no get_checksum=no
#   register: check

- name: delete previous deployments
  file: path="{{ doc_root_dir }}" state=absent

- name: Git clone php gateway
  git: repo=https://github.com/apache/airavata-php-gateway.git
       dest="{{ doc_root_dir }}" version="{{ git_branch }}"
  become: yes

- name: Create user data dir {{ user_data_dir }}
  file: path="{{ user_data_dir }}" state=directory owner="{{user}}" group="{{group}}" mode=0777 recurse=yes
  become: yes

  #Make sure selinux is dissabled in remote machine
- name: Disable selinux
  selinux: state=disabled
  become: yes
  register: selinux_disable

# need to restart after disable selinux
- name: restart machine
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  become: yes
  ignore_errors: true
  when: (selinux_disable|success) and (selinux_disable.changed == true)
  register: restart

- name: waiting for server to come back
  local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=60
  when: (restart|success) and (restart.changed == true)


- name: Run composer update
  composer: command=update working_dir="{{ doc_root_dir }}"
  become: yes

# step 6: Change pga configurations
- name: Copy pga config file
  template: src=pga_config.php.j2 dest="{{ doc_root_dir }}/app/config/pga_config.php"
  become: yes

# give write permission to storage directory
- name: give read permissions to doc root
  file: path="{{ doc_root_dir }}" state=directory mode=0755 recurse=yes
  become: yes

- name: give write permissions to storage dir
  file: path="{{ doc_root_dir }}/app/storage" state=directory mode=0777 owner="{{user}}" group="{{group}}" recurse=yes
  become: yes

- name: Enable https and http service on public zone
  firewalld: service="{{ item }}" permanent=true state=enabled zone=public immediate=True
  with_items:
    - http
    - https
  become: yes

# - name: Edit file
#   lineinfile: dest="{{ httpd_conf_file }}" regexp="#\n\s*AllowOverride None" line="#\nAllowOverride All"
#   notify:
#     - restart httpd
#   become: yes

- name: copy httpd.conf file
  template: src={{ httpd_name[ansible_os_family] }}.conf.j2 dest={{ httpd_conf_file_location[ansible_os_family] }}
  become: yes
  notify:
    - restart httpd

#- name: start httpd service
#  service: name=httpd state=started
#  become: yes
