---
- name: Create root directory
  file: path="{{ doc_root_dir }}" state=directory
  become: yes

- include: install_deps_{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml

# - name: Check previous deployments
#   stat: path="{{ doc_root_dir }}" get_md5=no get_checksum=no
#   register: check

# Why? if it's new, we just created this dir above...
# if not, can just pull from the git repo in the next task...
#- name: delete previous deployments 
#  file: path="{{ doc_root_dir }}" state=absent

- name: Git clone php gateway
  git: 
   repo: "{{ pga_repo }}"
   dest: "{{ doc_root_dir }}" 
   version: "{{ git_branch }}"
   update: yes
   force: yes
  become: yes

- name: Create user data dir {{ user_data_dir }}
  file: path="{{ user_data_dir }}" state=directory owner="{{user}}" group="{{group}}" mode=0777 recurse=yes
  become: yes

# - name: Allow selinux outbound connection from web server
  # command: setsebool -P httpd_can_network_connect 1

#SHOULD MAKE A PROFILE RATHER THAN DISABLING. SELINUX IS *GOOD*
# going to permissive from enforcing doesn't require a reboot
# permissive allows all, but still logs, allowing easy build
# of a working profile.
- name: set selinux permissive
  selinux: state=permissive policy=default
  become: yes
  register: selinux_disable
  when: ansible_os_family == "RedHat"

- name: Run composer update
  composer: command=update working_dir="{{ doc_root_dir }}"
  become: yes

# step 6: Change pga configurations
- name: Copy pga config file
  template: src=pga_config.php.j2 dest="{{ doc_root_dir }}/app/config/pga_config.php"
  become: yes

# give write permission to storage directory
- name: give read permissions to doc root
  file: path="{{ doc_root_dir }}" state=directory mode=0755 recurse=yes
  become: yes

- name: give write permissions to storage dir
  file: path="{{ doc_root_dir }}/app/storage" state=directory mode=0777 owner="{{user}}" group="{{group}}" recurse=yes
  become: yes

- name: Enable https and http service on public zone
  firewalld: service="{{ item }}" permanent=true state=enabled zone=public immediate=True
  with_items:
    - http
    - https
  become: yes

- name: copy httpd.conf file
  template: src={{ httpd_name[ansible_os_family] }}.conf.j2 dest={{ httpd_conf_file_location[ansible_os_family] }}
  become: yes
  notify:
    - restart httpd
