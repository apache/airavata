#
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

---

- name: Adds Python MySQL support on Debian/Ubuntu
  apt: pkg="python3-mysqldb" state=present
  become: true
  become_user: root
  when: hostvars[delegated_host].ansible_os_family == 'Debian'

# Explicitly lookup hostvars for delegated host. There seem to be bugs around
# delegation and ansible facts, see https://github.com/ansible/ansible/issues/30630
- include_tasks: install_deps_{{ hostvars[delegated_host].ansible_distribution }}_{{ hostvars[delegated_host].ansible_distribution_major_version }}.yml
  when: hostvars[delegated_host].ansible_os_family == "RedHat"

- name: create django database ({{ django_database_name }})
  mysql_db: name="{{ django_database_name }}" state=present encoding=utf8 collation=utf8_bin

- name: give access to {{ django_db_username }} from remote (internal ip)
  mysql_user: name="{{ django_db_username }}" password="{{ django_db_password }}" host="{{ django_internal_ip }}"

- name: give access to {{ django_db_username }} from remote (public ip)
  mysql_user: name="{{ django_db_username }}" password="{{ django_db_password }}" host="{{ django_public_ip }}"

- name: give access to {{ django_db_username }} from localhost
  mysql_user: name="{{ django_db_username }}" password="{{ django_db_password }}" host="localhost"

- name: create new user {{ django_db_username }} with all privileges on all django databases
  mysql_user: name="{{ django_db_username }}"
              password="{{ django_db_password }}"
              append_privs=yes
              host_all=yes
              priv={{ django_database_name }}.*:ALL,GRANT state=present
