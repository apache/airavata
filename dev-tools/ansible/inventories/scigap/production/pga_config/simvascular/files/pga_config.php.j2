<?php
return array(
    /**
     * *****************************************************************
     *  WSO2 Identity Server Related Configurations
     * *****************************************************************
     */

    'wsis' => [

        /**
         * Admin Role Name
         */
        'admin-role-name' => '{{ admin_role_name }}',

        /**
         * Read only Admin Role Name
         */
        'read-only-admin-role-name' => '{{ admin_readonly_role_name }}',

        /**
         * Gateway user role
         */
        'user-role-name' => '{{ user_role_name }}',

        /**
         * Initial user role. This is the initial user role assigned to a new
         * user. Set this to one of the three roles above to automatically
         * grant new users that role, or set to some other role ('user-pending')
         * to require admin approval before users have access.
         */
        'initial-role-name' => '{{ initial_role_name }}',

        /**
         * Tenant Domain
         */
        'tenant-domain' => '{{ tenant_domain }}',

        /**
         * Tenant admin's username
         */
        'admin-username' => '{{ admin_username }}',

        /**
         * Tenant admin's password
         */
        'admin-password' => '{{ admin_password }}',

        /**
         * OAuth client key
         */
        'oauth-client-key' => '{{ oauth_client_key }}',

        /**
         * OAuth client secret
         */
        'oauth-client-secret' => '{{ oauth_client_secret }}',

        /**
         * Authentication options
         */
        'auth-options' => [
            {% for auth_option in auth_options %}
            [
                'oauth-grant-type' => '{{ auth_option["oauth_grant_type"] }}',
                'name' => '{{ auth_option["name"] }}',
                {% if "oauth_authorize_url_extra_params" in auth_option %}
                'oauth-authorize-url-extra-params' => '{{ auth_option["oauth_authorize_url_extra_params"] }}',
                {% endif %}
                {% if "logo" in auth_option %}
                'logo' => '{{ auth_option["logo"] }}',
                {% endif %}
            ],
            {% endfor %}
        ],

        /**
         * OAuth call back url (only if the grant type is authorization_code)
         */
        'oauth-callback-url' => '{{ oauth_callback_url }}',

        /**
         * For OIDC servers that support the discovery protocol.
         */
        'openid-connect-discovery-url' => '{{ oidc_discovery_url }}',

        /**
         * Identity server url
         */
        'service-url' => '{{ oauth_service_url }}',

        /**
         * Enable HTTPS server verification
         */
        'verify-peer' => {{ auth_verify_peer }},

        /**
         * Path to the server certificate file
         */
        'cafile-path' => app_path() . '/resources/security/incommon_rsa_server_ca.pem',
    ],


    /**
     * *****************************************************************
     *  Airavata Client Configurations
     * *****************************************************************
     */
    'airavata' => [

        /**
         * Airavata API server location. Use tls:// as the protocol to
         * connect TLS enabled Airavata
         */
        'airavata-server' => '{{ airavata_server }}',

        /**
         * Airavata API server port
         */
        'airavata-port' => '{{ airavata_port }}',

        /**
         * Airavata Profile Service server location. Use tls:// as the protocol to
         * connect over TLS
         */
        'airavata-profile-service-server' => '{{ airavata_profile_service_server }}',

        /**
         * Airavata Profile Service port
         */
        'airavata-profile-service-port' => '{{ airavata_profile_service_port }}',

        /**
         * Airavata API server thrift communication timeout
         */
        'airavata-timeout' => '1000000',

        /**
         * PGA Gateway ID
         */
        'gateway-id' => '{{ gateway_id }}',

        /**
         * Maximum size of a file which is allowed to upload to the server
         */
        'server-allowed-file-size' => 64,

        /**
         * absolute path of the data dir
         */
        'experiment-data-absolute-path' => '{{ experiment_data_dir }}',

        /**
         * Advanced experiments options
         */
        'advanced-experiment-options' => '',

        /**
         * Default queue name
         */
        'queue-name' => 'long',

        /**
         * Default node count
         */
        'node-count' => '1',

        /**
         * Default total core count
         */
        'total-cpu-count' => '16',

        /**
         * Default wall time limit
         */
        'wall-time-limit' => '30',

        /**
         * Max node count
         */
        'max-node-count' => '4',

        /**
         * Max total core count
         */
        'max-total-cpu-count' => '96',

        /**
         * Max wall time limit
         */
        'max-wall-time-limit' => '300',

        /**
         * Enable app-catalog cache
         */
        'enable-app-catalog-cache' => true,

        /**
         * Life time of app catalog data cache in minutes
         */
        'app-catalog-cache-duration' => 5,

         /**
         * Gateway data store resource id
         */
         'gateway-data-store-resource-id' => '{{ gateway_data_store_resource_id }}',

         /**
          * Data Sharing enabled
          */
          'data-sharing-enabled' => {{ data_sharing_enabled }}
    ],

    /**
     * *****************************************************************
     *  Portal Related Configurations
     * *****************************************************************
     */
    'portal' => [
        /**
         * Whether this portal is the SciGaP admin portal
         */
        'super-admin-portal' => {{ super_admin_portal }},

        /**
         * Set the name of theme in use here
         */
        'theme' => '{{ portal_theme }}',

        /**
         * Portal title
         */
        'portal-title' => '{{ portal_title }}',

        /**
         * Email address of the portal admin. Portal admin well get email notifications for events
         * such as new user creation
         */
        'admin-emails' => {{ admin_emails }},

        /**
         * Email account that the portal should login to send emails
         */
        'portal-email-username' => '{{ portal_email_username }}',

        /**
         * Password for the portal's email account
         */
        'portal-email-password' => '{{ portal_email_password }}',

        /**
         * SMTP server on which the portal should connect
         */
        'portal-smtp-server-host' => 'smtp.gmail.com',

        /**
         * SMTP server port on which the portal should connect
         */
        'portal-smtp-server-port' => '587',

        /**
         * Set JIRA Issue Collector scripts here.
         */
        'jira-help' =>
        [
            /**
             * Report Issue Script issued for your app by Atlassian JIRA
             */
            'report-issue-script' => '',
            /**
             * Collector id at the end of the above script
             */
            'report-issue-collector-id' => '',
            /**
             * Create Report Script issued for your app by Atlassian JIRA
             */
            'request-feature-script' => '',
            /**
             * Collector id at the end of the above script
             */
            'request-feature-collector-id' => ''
        ],

        /**
         * Set Google Analytics Id here. ID format that generates from
         * creating tracker object should be
         *
         * UA-XXXXX-Y
         *
         * for it to be working correctly. Currently it is only set for
         * sending pageviews.
         */
        'google-analytics-id' => '{{ pga_google_analytics_id }}'
    ]
);
