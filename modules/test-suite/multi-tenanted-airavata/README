PRE_REQUISITES
============================

1. Set up new airavata instance with mysql database
2. Update credential store settings according to mysql database

ASSUMPTIONS
==============================
1. We assume airavata has a default gateway setup with "php-reference-gateway"
2. Only Amber and Echo applications will be created for trestles, stampede and Bigred2


How to build
=============================
1. Go to <airavata-source>/modules/test-suite/multi-tenanted-airavata and uncomment the mysql dependency from the pom.
2. Run mvn clean install
3. Once the build completes, there will be a jar called "multi-tenanted-airavata-0.15-SNAPSHOT-jar-with-dependencies.jar" inside target directory


How to run
========================

1. Copy multi-tenanted-airavata-0.15-SNAPSHOT-jar-with-dependencies.jar to a location
2. Create a folder called "resources" in the same location and copy airavata-client.properties and test-framework.properties.
3. Update the options in the properties file
    In airavata-client.properties
        * thrift.server.host
        * thrift.server.port
        * credential.store.keystore.url
        * credential.store.keystore.alias
        * credential.store.keystore.password
        * credential.store.jdbc.url
        * credential.store.jdbc.user
        * credential.store.jdbc.password
        * credential.store.jdbc.driver
        * rabbitmq.exchange.name
        * rabbitmq.broker.url

    In test-framework.properties
        * ssh.pub.key.location
        * ssh.private.key.location
        * ssh.password
        * ssh.username
        * token.file.location
        * result.file.location
        * Amber input file locations (02_Heat.rst_location, 03_Prod.in_location, prmtop_location)
3. To run the jar, in the command line type :
        java -cp ./:./resources:multi-tenanted-airavata-0.15-SNAPSHOT-jar-with-dependencies.jar org.apache.airavata.testsuite.multitenantedairavata.FrameworkBootstrapping -regApps

        You can provide different parameters.
            -regApps = to register gateways, generate SSH keys, register applications
            -expExec = to create Amber and Echo experiments, launch them and monitor
            -runAll = to do above two options together

4. Monitor results will be written in to the location you specified in "result.file.location" with name of the current timestamp




