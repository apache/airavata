#!${shellName}

# SLURM job submission script generated by Apache Airavata
<%
   def checkCommand = {items, prefix -> for (it in items) if (it.startsWith(prefix)) return it}

   def extQueue = checkCommand(preJobCommands, '#SBATCH -p')
   def rmQueue = checkCommand(preJobCommands, 'RM #SBATCH -p')
   preJobCommands = preJobCommands - extQueue
   preJobCommands = preJobCommands - rmQueue
   if (extQueue) out.print extQueue + '\n' else if (queueName != null && queueName != "" && rmQueue == null) out.print '#SBATCH -p ' + queueName + '\n'

   def extNodes = checkCommand(preJobCommands, '#SBATCH -N')
   def rmNodes = checkCommand(preJobCommands, 'RM #SBATCH -N')
   preJobCommands = preJobCommands - extNodes
   preJobCommands = preJobCommands - rmNodes
   if (extNodes) out.print extNodes + '\n' else if (nodes != null && nodes != "" && rmNodes == null) out.print '#SBATCH -N ' + nodes + '\n'

   def extCpu = checkCommand(preJobCommands, '#SBATCH -n')
   def rmCpu = checkCommand(preJobCommands, 'RM #SBATCH -n')
   preJobCommands = preJobCommands - extCpu
   preJobCommands = preJobCommands - rmCpu
   if (extCpu) out.print extCpu + '\n' else if (cpuCount != null && cpuCount != "" && rmCpu == null) out.print '#SBATCH -n ' + cpuCount + '\n'

   def extMem = checkCommand(preJobCommands, '#SBATCH --mem=')
   def rmMem = checkCommand(preJobCommands, 'RM #SBATCH --mem=')
   preJobCommands = preJobCommands - extMem
   preJobCommands = preJobCommands - rmMem
   if (extMem) out.print extMem + '\n' else if (usedMem != null && usedMem != "" && rmMem == null) out.print '#SBATCH --mem=' + usedMem + 'M\n'

   if (mailAddress != null && mailAddress != "") out.print '#SBATCH --mail-user=' + mailAddress + '\n'
   if (accountString != null && accountString != "" ) out.print '#SBATCH -A ' + accountString + '\n'
   if (maxWallTime != null && maxWallTime != "") out.print '#SBATCH -t ' + maxWallTime + '\n'
   if (jobName != null && jobName != "") out.print '#SBATCH -J ' + jobName + '\n'
   if (standardOutFile != null && standardOutFile != "") out.print '#SBATCH -o ' + standardOutFile + '\n'
   if (standardErrorFile != null && standardErrorFile != "") out.print '#SBATCH -e ' + standardErrorFile + '\n'
   if (qualityOfService != null && qualityOfService != "") out.print '#SBATCH --qos=' + qualityOfService + '\n'
   if (reservation != null && reservation != "") out.print '#SBATCH --reservation=' + reservation + '\n'
   if (queueSpecificMacros != null) for(queueMacro in queueSpecificMacros)  out.print queueMacro +'\n'
%>
#SBATCH --mail-type=ALL

<% if (exports != null) for(com in exports)  out.print 'export ' + com +'\n'
   if (moduleCommands != null) for(mc in moduleCommands)  out.print mc +'\n'
   if (workingDirectory != null && workingDirectory != "")  out.print 'cd ' + workingDirectory +'\n'
   if (preJobCommands != null) for(pjc in preJobCommands)  out.print pjc +'\n'
   if (jobSubmitterCommand != null && jobSubmitterCommand != "")  out.print jobSubmitterCommand + ' '
   if (executablePath != null && executablePath != "")  out.print  executablePath + ' '
   if (inputs != null) for(input in inputs)  out.print input + ' '
   out.print '\n'
   if (postJobCommands != null) for(pjc in postJobCommands)  out.print pjc +'\n'
%>
