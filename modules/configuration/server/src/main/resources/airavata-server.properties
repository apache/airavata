#
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

###########################################################################
#
#  This properties file provides configuration for all Airavata Services:
#  Registry, Workflow Interpreter, GFac, Message Broker, Message Box
#
###########################################################################

###########################################################################
# Airavata Embedded-Tomcat Server Configuration
###########################################################################
# By default, tomcat runs on port 80. If the port is changed, it will be
#  have to be specified with port properties. This will be picked up by
#  the registry service to register the service end-points.

port=8080

#This property will be useful when there are multiple network interfaces in the machine where airavata is
#deployed, so users have to specify the ip address manually and this can be use for callback ip of the system(specially in gfac).

#ip=192.2.33.12


#This property will enable https and stops http, during the url registration, https urls will be stored and
# http urls will not get registered, because currently airavata supports only one url for each service
#enable.https=false
#system properties used by services to register service URLs
system.gateway=${gateway_id}
system.user=admin
system.password=admin
airavata.server.url=http://localhost:8080/airavata/services/registry

###########################################################################
# Airavata Registry Configuration
###########################################################################
#for derby [AiravataJPARegistry]
registry.jdbc.driver=org.apache.derby.jdbc.ClientDriver
registry.jdbc.url=jdbc:derby://localhost:1527/persistent_data;create=true;user=airavata;password=airavata
# MySql database configuration
#registry.jdbc.driver=com.mysql.jdbc.Driver
#registry.jdbc.url=jdbc:mysql://localhost:3306/persistent_data
registry.jdbc.user=airavata
registry.jdbc.password=airavata
start.derby.server.mode=true
validationQuery=SELECT 1 from CONFIGURATION
jpa.cache.size=5000
#jpa.connection.properties=MaxActive=10,MaxIdle=5,MinIdle=2,MaxWait=60000,testWhileIdle=true,testOnBorrow=true
# Properties to setup registry service
default.registry.user=admin
default.registry.password=admin
default.registry.password.hash.method=SHA
default.registry.gateway=${gateway_id}
#for rest [RegistryClient]
#registry.jdbc.url=http://localhost:9080/airavata-services

###########################################################################
# Airavata App Catalog DB Configuration
###########################################################################
#for derby [AiravataJPARegistry]
appcatalog.jdbc.driver=org.apache.derby.jdbc.ClientDriver
appcatalog.jdbc.url=jdbc:derby://localhost:1527/app_catalog;create=true;user=airavata;password=airavata
# MySql database configuration
#appcatalog.jdbc.driver=com.mysql.jdbc.Driver
#appcatalog.jdbc.url=jdbc:mysql://localhost:3306/app_catalog
appcatalog.jdbc.user=airavata
appcatalog.jdbc.password=airavata
appcatalog.validationQuery=SELECT 1 from CONFIGURATION

#user defined registry accessor classes
#class.provenance.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.configuration.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.descriptor.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.project.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.user.workflow.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.published.workflow.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry

###########################################################################
# Airavata Workflow Interpreter Configurations
###########################################################################

runInThread=true
provenance=true
provenanceWriterThreadPoolSize=20
gfac.embedded=true

#
# Security Configuration used by Airavata Generic Factory Service
#  to interact with Computational Resources.
#

###########################################################################
# Airavata GFac MyProxy GSI credentials to access Grid Resources.
###########################################################################
gfac=org.apache.airavata.gfac.server.GfacServer
myproxy.server=myproxy.teragrid.org
myproxy.username=ogce
myproxy.password=
myproxy.life=3600
# XSEDE Trusted certificates can be downloaded from https://software.xsede.org/security/xsede-certs.tar.gz
trusted.cert.location=/Users/lahirugunathilake/Downloads/certificates
# SSH PKI key pair or ssh password can be used SSH based authentication is used.
# if user specify both password authentication gets the higher preference

################# ---------- For ssh key pair authentication ------------------- ################
#public.ssh.key=/path to public key for ssh
#ssh.username=username for ssh connection
#private.ssh.key=/path to private key file for ssh
#ssh.keypass=passphrase for the private key


################# ---------- For ssh key pair authentication ------------------- ################
#ssh.username=username for ssh connection
#ssh.password=Password for ssh connection




###########################################################################
# Advance configuration to change service implementations
###########################################################################

#Update the server context root path if airavata server is deployed under a different context root other than axis2
server.context-root=airavata-server

#
# Class which implemented HostScheduler interface. It will determine the which host to submit the request
#
host.scheduler=org.apache.airavata.gfac.core.scheduler.impl.SimpleHostScheduler


###---------------------------REGISTRY API IMPLEMENTATION---------------------------###

#class.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.registry.accessor=org.apache.airavata.rest.client.RegistryClient

###########################################################################
# AMQP Notification Configuration
###########################################################################
amqp.notification.enable=1

amqp.broker.host=localhost
amqp.broker.port=5672
amqp.broker.username=guest
amqp.broker.password=guest

amqp.sender=org.apache.airavata.wsmg.client.amqp.rabbitmq.AMQPSenderImpl
amqp.topic.sender=org.apache.airavata.wsmg.client.amqp.rabbitmq.AMQPTopicSenderImpl
amqp.broadcast.sender=org.apache.airavata.wsmg.client.amqp.rabbitmq.AMQPBroadcastSenderImpl

###---------------------------Computational Middleware Configurations---------------------------###

#enable.application.job.status.history=true
#http://localhost:8080/axis2/services/RegistryService?wsdl
registry.service.wsdl=http://localhost:${port}/${server.context-root}/services/RegistryService?wsdl

# If false, disables two phase commit when submitting jobs
TwoPhase=true


###---------------------------Monitoring module Configurations---------------------------###
#This will be the primary monitoring tool which runs in airavata, in future there will be multiple monitoring
#mechanisms and one would be able to start a monitor
monitors=org.apache.airavata.gfac.monitor.impl.pull.qstat.QstatMonitor,org.apache.airavata.gfac.monitor.impl.LocalJobMonitor
#,org.apache.airavata.gfac.monitor.impl.push.amqp.AMQPMonitor
#This is the amqp related configuration and this lists down the Rabbitmq host, this is an xsede specific configuration
amqp.hosts=info1.dyn.teragrid.org,info2.dyn.teragrid.org
proxy.file.path=/Users/lahirugunathilake/Downloads/x509up_u503876
connection.name=xsede
#publisher
activity.listeners=org.apache.airavata.gfac.core.monitor.AiravataJobStatusUpdator,org.apache.airavata.gfac.core.monitor.AiravataTaskStatusUpdator,org.apache.airavata.gfac.core.monitor.AiravataWorkflowNodeStatusUpdator,org.apache.airavata.api.server.listener.AiravataExperimentStatusUpdator,org.apache.airavata.gfac.core.monitor.GfacInternalStatusUpdator,org.apache.airavata.workflow.engine.util.ProxyMonitorPublisher
publish.rabbitmq=false
activity.publisher=org.apache.airavata.messaging.core.impl.RabbitMQPublisher
rabbitmq.broker.url=amqp://localhost:5672
rabbitmq.exchange.name=airavata_rabbitmq_exchange
#This property will be useful when there are multiple network interfaces in the machine where airavata is
#deployed, so users have to specify the ip address manually and this can be use for callback ip of the system(specially in gfac).

#ip=192.2.33.12
###---------------------------Orchestrator module Configurations---------------------------###
#job.submitter=org.apache.airavata.orchestrator.core.impl.GFACEmbeddedJobSubmitter
job.submitter=org.apache.airavata.orchestrator.core.impl.GFACServiceJobSubmitter
job.validators=org.apache.airavata.orchestrator.core.validator.impl.SimpleAppDataValidator,org.apache.airavata.orchestrator.core.validator.impl.ExperimentStatusValidator
submitter.interval=10000
threadpool.size=10
start.submitter=true
embedded.mode=true
enable.validation=true
orchestrator=org.apache.airavata.orchestrator.server.OrchestratorServer

###---------------------------API Server module Configurations---------------------------###
apiserver=org.apache.airavata.api.server.AiravataAPIServer

###---------------------------Workflow Server module Configurations---------------------------###
workflowserver=org.apache.airavata.api.server.WorkflowServer


###---------------------------Airavata Server Configurations---------------------------###
#servers=apiserver,appcatalogserver,orchestrator,gfac
servers=apiserver,orchestrator,gfac,workflowserver
#shutdown.trategy=NONE
shutdown.trategy=SELF_TERMINATE


###--------------------------- Credential Store Specific Parameters---------------------------###
credential.store.keystore.url=/Users/lahirugunathilake/Downloads/airavata_sym.jks
credential.store.keystore.alias=airavata
credential.store.keystore.password=airavata
credential.store.jdbc.url=jdbc:mysql://gw110.iu.xsede.org:3306/airavata_pga_prod
credential.store.jdbc.user=
credential.store.jdbc.password=
credential.store.jdbc.driver=com.mysql.jdbc.Driver

notifier.enabled=false
#period in milliseconds
notifier.duration=5000

email.server=smtp.googlemail.com
email.server.port=465
email.user=airavata
email.password=xxx
email.ssl=true
email.from=airavata@apache.org

gateway_id=php_reference_gateway

apiserver.server.host=localhost
apiserver.server.port=8930
apiserver.server.min.threads=50
workflow.server.host=localhost
workflow.server.port=8931
orchestrator.server.host=localhost
orchestrator.server.port=8940
gfac.server.host=localhost
gfac.server.port=8950
orchestrator.server.min.threads=50

##----------------------------- Zookeeper Server Configurations ----------------------###
embedded.zk=true
zookeeper.server.host=localhost
zookeeper.server.port=2181
airavata-server=/api-server
orchestrator-server=/orchestrator-server
gfac-server=/gfac-server
gfac-experiments=/gfac-experiments
gfac-server-name=gfac-node0
orchestrator-server-name=orch-node0
airavata-server-name=api-node0
