/**
 * Autogenerated by Thrift Compiler (1.0.0-dev)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.airavata.allocation.manager.models;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * <p>User Specific Resource Detail</p>
 * <li>Id: Unique id</li>
 * <li>allocatedServiceUnits: Allocation requested by the user</li>
 * <li>applicationsToBeUsed: Applications to be used</li>
 * <li>endDate: End date updated by the admin</li>
 * <li>projectId: Unique id of the project</li>
 * <li>rejectionReason: Rejection reason updated by the admin</li>
 * <li>resourceType: Resource type for the request</li>
 * <li>specificResource: Specific resource for the request</li>
 * <li>startDate: Start date of the allocation updated by the admin</li>
 * <li>subStatus: Status of the specific resource</li>
 * 
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (1.0.0-dev)")
public class UserSpecificResourceDetail implements org.apache.thrift.TBase<UserSpecificResourceDetail, UserSpecificResourceDetail._Fields>, java.io.Serializable, Cloneable, Comparable<UserSpecificResourceDetail> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserSpecificResourceDetail");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField ALLOCATED_SERVICE_UNITS_FIELD_DESC = new org.apache.thrift.protocol.TField("allocatedServiceUnits", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField APPLICATIONS_TO_BE_USED_FIELD_DESC = new org.apache.thrift.protocol.TField("applicationsToBeUsed", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("endDate", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField PROJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("projectId", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField REJECTION_REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("rejectionReason", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField REQUESTED_SERVICE_UNITS_FIELD_DESC = new org.apache.thrift.protocol.TField("requestedServiceUnits", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField RESOURCE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("resourceType", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SPECIFIC_RESOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("specificResource", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField START_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("startDate", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField SUB_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("subStatus", org.apache.thrift.protocol.TType.STRING, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UserSpecificResourceDetailStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UserSpecificResourceDetailTupleSchemeFactory();

  public long id; // optional
  public long allocatedServiceUnits; // optional
  public java.lang.String applicationsToBeUsed; // optional
  public long endDate; // optional
  public long projectId; // optional
  public java.lang.String rejectionReason; // optional
  public long requestedServiceUnits; // optional
  public java.lang.String resourceType; // optional
  public java.lang.String specificResource; // optional
  public long startDate; // optional
  public java.lang.String subStatus; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    ALLOCATED_SERVICE_UNITS((short)2, "allocatedServiceUnits"),
    APPLICATIONS_TO_BE_USED((short)3, "applicationsToBeUsed"),
    END_DATE((short)4, "endDate"),
    PROJECT_ID((short)5, "projectId"),
    REJECTION_REASON((short)6, "rejectionReason"),
    REQUESTED_SERVICE_UNITS((short)7, "requestedServiceUnits"),
    RESOURCE_TYPE((short)8, "resourceType"),
    SPECIFIC_RESOURCE((short)9, "specificResource"),
    START_DATE((short)10, "startDate"),
    SUB_STATUS((short)11, "subStatus");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // ALLOCATED_SERVICE_UNITS
          return ALLOCATED_SERVICE_UNITS;
        case 3: // APPLICATIONS_TO_BE_USED
          return APPLICATIONS_TO_BE_USED;
        case 4: // END_DATE
          return END_DATE;
        case 5: // PROJECT_ID
          return PROJECT_ID;
        case 6: // REJECTION_REASON
          return REJECTION_REASON;
        case 7: // REQUESTED_SERVICE_UNITS
          return REQUESTED_SERVICE_UNITS;
        case 8: // RESOURCE_TYPE
          return RESOURCE_TYPE;
        case 9: // SPECIFIC_RESOURCE
          return SPECIFIC_RESOURCE;
        case 10: // START_DATE
          return START_DATE;
        case 11: // SUB_STATUS
          return SUB_STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __ALLOCATEDSERVICEUNITS_ISSET_ID = 1;
  private static final int __ENDDATE_ISSET_ID = 2;
  private static final int __PROJECTID_ISSET_ID = 3;
  private static final int __REQUESTEDSERVICEUNITS_ISSET_ID = 4;
  private static final int __STARTDATE_ISSET_ID = 5;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ID,_Fields.ALLOCATED_SERVICE_UNITS,_Fields.APPLICATIONS_TO_BE_USED,_Fields.END_DATE,_Fields.PROJECT_ID,_Fields.REJECTION_REASON,_Fields.REQUESTED_SERVICE_UNITS,_Fields.RESOURCE_TYPE,_Fields.SPECIFIC_RESOURCE,_Fields.START_DATE,_Fields.SUB_STATUS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ALLOCATED_SERVICE_UNITS, new org.apache.thrift.meta_data.FieldMetaData("allocatedServiceUnits", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.APPLICATIONS_TO_BE_USED, new org.apache.thrift.meta_data.FieldMetaData("applicationsToBeUsed", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_DATE, new org.apache.thrift.meta_data.FieldMetaData("endDate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PROJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("projectId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.REJECTION_REASON, new org.apache.thrift.meta_data.FieldMetaData("rejectionReason", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUESTED_SERVICE_UNITS, new org.apache.thrift.meta_data.FieldMetaData("requestedServiceUnits", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RESOURCE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("resourceType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SPECIFIC_RESOURCE, new org.apache.thrift.meta_data.FieldMetaData("specificResource", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.START_DATE, new org.apache.thrift.meta_data.FieldMetaData("startDate", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SUB_STATUS, new org.apache.thrift.meta_data.FieldMetaData("subStatus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserSpecificResourceDetail.class, metaDataMap);
  }

  public UserSpecificResourceDetail() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserSpecificResourceDetail(UserSpecificResourceDetail other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.allocatedServiceUnits = other.allocatedServiceUnits;
    if (other.isSetApplicationsToBeUsed()) {
      this.applicationsToBeUsed = other.applicationsToBeUsed;
    }
    this.endDate = other.endDate;
    this.projectId = other.projectId;
    if (other.isSetRejectionReason()) {
      this.rejectionReason = other.rejectionReason;
    }
    this.requestedServiceUnits = other.requestedServiceUnits;
    if (other.isSetResourceType()) {
      this.resourceType = other.resourceType;
    }
    if (other.isSetSpecificResource()) {
      this.specificResource = other.specificResource;
    }
    this.startDate = other.startDate;
    if (other.isSetSubStatus()) {
      this.subStatus = other.subStatus;
    }
  }

  public UserSpecificResourceDetail deepCopy() {
    return new UserSpecificResourceDetail(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setAllocatedServiceUnitsIsSet(false);
    this.allocatedServiceUnits = 0;
    this.applicationsToBeUsed = null;
    setEndDateIsSet(false);
    this.endDate = 0;
    setProjectIdIsSet(false);
    this.projectId = 0;
    this.rejectionReason = null;
    setRequestedServiceUnitsIsSet(false);
    this.requestedServiceUnits = 0;
    this.resourceType = null;
    this.specificResource = null;
    setStartDateIsSet(false);
    this.startDate = 0;
    this.subStatus = null;
  }

  public long getId() {
    return this.id;
  }

  public UserSpecificResourceDetail setId(long id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public long getAllocatedServiceUnits() {
    return this.allocatedServiceUnits;
  }

  public UserSpecificResourceDetail setAllocatedServiceUnits(long allocatedServiceUnits) {
    this.allocatedServiceUnits = allocatedServiceUnits;
    setAllocatedServiceUnitsIsSet(true);
    return this;
  }

  public void unsetAllocatedServiceUnits() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ALLOCATEDSERVICEUNITS_ISSET_ID);
  }

  /** Returns true if field allocatedServiceUnits is set (has been assigned a value) and false otherwise */
  public boolean isSetAllocatedServiceUnits() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ALLOCATEDSERVICEUNITS_ISSET_ID);
  }

  public void setAllocatedServiceUnitsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ALLOCATEDSERVICEUNITS_ISSET_ID, value);
  }

  public java.lang.String getApplicationsToBeUsed() {
    return this.applicationsToBeUsed;
  }

  public UserSpecificResourceDetail setApplicationsToBeUsed(java.lang.String applicationsToBeUsed) {
    this.applicationsToBeUsed = applicationsToBeUsed;
    return this;
  }

  public void unsetApplicationsToBeUsed() {
    this.applicationsToBeUsed = null;
  }

  /** Returns true if field applicationsToBeUsed is set (has been assigned a value) and false otherwise */
  public boolean isSetApplicationsToBeUsed() {
    return this.applicationsToBeUsed != null;
  }

  public void setApplicationsToBeUsedIsSet(boolean value) {
    if (!value) {
      this.applicationsToBeUsed = null;
    }
  }

  public long getEndDate() {
    return this.endDate;
  }

  public UserSpecificResourceDetail setEndDate(long endDate) {
    this.endDate = endDate;
    setEndDateIsSet(true);
    return this;
  }

  public void unsetEndDate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ENDDATE_ISSET_ID);
  }

  /** Returns true if field endDate is set (has been assigned a value) and false otherwise */
  public boolean isSetEndDate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ENDDATE_ISSET_ID);
  }

  public void setEndDateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ENDDATE_ISSET_ID, value);
  }

  public long getProjectId() {
    return this.projectId;
  }

  public UserSpecificResourceDetail setProjectId(long projectId) {
    this.projectId = projectId;
    setProjectIdIsSet(true);
    return this;
  }

  public void unsetProjectId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  /** Returns true if field projectId is set (has been assigned a value) and false otherwise */
  public boolean isSetProjectId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PROJECTID_ISSET_ID);
  }

  public void setProjectIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PROJECTID_ISSET_ID, value);
  }

  public java.lang.String getRejectionReason() {
    return this.rejectionReason;
  }

  public UserSpecificResourceDetail setRejectionReason(java.lang.String rejectionReason) {
    this.rejectionReason = rejectionReason;
    return this;
  }

  public void unsetRejectionReason() {
    this.rejectionReason = null;
  }

  /** Returns true if field rejectionReason is set (has been assigned a value) and false otherwise */
  public boolean isSetRejectionReason() {
    return this.rejectionReason != null;
  }

  public void setRejectionReasonIsSet(boolean value) {
    if (!value) {
      this.rejectionReason = null;
    }
  }

  public long getRequestedServiceUnits() {
    return this.requestedServiceUnits;
  }

  public UserSpecificResourceDetail setRequestedServiceUnits(long requestedServiceUnits) {
    this.requestedServiceUnits = requestedServiceUnits;
    setRequestedServiceUnitsIsSet(true);
    return this;
  }

  public void unsetRequestedServiceUnits() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REQUESTEDSERVICEUNITS_ISSET_ID);
  }

  /** Returns true if field requestedServiceUnits is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestedServiceUnits() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REQUESTEDSERVICEUNITS_ISSET_ID);
  }

  public void setRequestedServiceUnitsIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REQUESTEDSERVICEUNITS_ISSET_ID, value);
  }

  public java.lang.String getResourceType() {
    return this.resourceType;
  }

  public UserSpecificResourceDetail setResourceType(java.lang.String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  public void unsetResourceType() {
    this.resourceType = null;
  }

  /** Returns true if field resourceType is set (has been assigned a value) and false otherwise */
  public boolean isSetResourceType() {
    return this.resourceType != null;
  }

  public void setResourceTypeIsSet(boolean value) {
    if (!value) {
      this.resourceType = null;
    }
  }

  public java.lang.String getSpecificResource() {
    return this.specificResource;
  }

  public UserSpecificResourceDetail setSpecificResource(java.lang.String specificResource) {
    this.specificResource = specificResource;
    return this;
  }

  public void unsetSpecificResource() {
    this.specificResource = null;
  }

  /** Returns true if field specificResource is set (has been assigned a value) and false otherwise */
  public boolean isSetSpecificResource() {
    return this.specificResource != null;
  }

  public void setSpecificResourceIsSet(boolean value) {
    if (!value) {
      this.specificResource = null;
    }
  }

  public long getStartDate() {
    return this.startDate;
  }

  public UserSpecificResourceDetail setStartDate(long startDate) {
    this.startDate = startDate;
    setStartDateIsSet(true);
    return this;
  }

  public void unsetStartDate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARTDATE_ISSET_ID);
  }

  /** Returns true if field startDate is set (has been assigned a value) and false otherwise */
  public boolean isSetStartDate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARTDATE_ISSET_ID);
  }

  public void setStartDateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARTDATE_ISSET_ID, value);
  }

  public java.lang.String getSubStatus() {
    return this.subStatus;
  }

  public UserSpecificResourceDetail setSubStatus(java.lang.String subStatus) {
    this.subStatus = subStatus;
    return this;
  }

  public void unsetSubStatus() {
    this.subStatus = null;
  }

  /** Returns true if field subStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetSubStatus() {
    return this.subStatus != null;
  }

  public void setSubStatusIsSet(boolean value) {
    if (!value) {
      this.subStatus = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((java.lang.Long)value);
      }
      break;

    case ALLOCATED_SERVICE_UNITS:
      if (value == null) {
        unsetAllocatedServiceUnits();
      } else {
        setAllocatedServiceUnits((java.lang.Long)value);
      }
      break;

    case APPLICATIONS_TO_BE_USED:
      if (value == null) {
        unsetApplicationsToBeUsed();
      } else {
        setApplicationsToBeUsed((java.lang.String)value);
      }
      break;

    case END_DATE:
      if (value == null) {
        unsetEndDate();
      } else {
        setEndDate((java.lang.Long)value);
      }
      break;

    case PROJECT_ID:
      if (value == null) {
        unsetProjectId();
      } else {
        setProjectId((java.lang.Long)value);
      }
      break;

    case REJECTION_REASON:
      if (value == null) {
        unsetRejectionReason();
      } else {
        setRejectionReason((java.lang.String)value);
      }
      break;

    case REQUESTED_SERVICE_UNITS:
      if (value == null) {
        unsetRequestedServiceUnits();
      } else {
        setRequestedServiceUnits((java.lang.Long)value);
      }
      break;

    case RESOURCE_TYPE:
      if (value == null) {
        unsetResourceType();
      } else {
        setResourceType((java.lang.String)value);
      }
      break;

    case SPECIFIC_RESOURCE:
      if (value == null) {
        unsetSpecificResource();
      } else {
        setSpecificResource((java.lang.String)value);
      }
      break;

    case START_DATE:
      if (value == null) {
        unsetStartDate();
      } else {
        setStartDate((java.lang.Long)value);
      }
      break;

    case SUB_STATUS:
      if (value == null) {
        unsetSubStatus();
      } else {
        setSubStatus((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case ALLOCATED_SERVICE_UNITS:
      return getAllocatedServiceUnits();

    case APPLICATIONS_TO_BE_USED:
      return getApplicationsToBeUsed();

    case END_DATE:
      return getEndDate();

    case PROJECT_ID:
      return getProjectId();

    case REJECTION_REASON:
      return getRejectionReason();

    case REQUESTED_SERVICE_UNITS:
      return getRequestedServiceUnits();

    case RESOURCE_TYPE:
      return getResourceType();

    case SPECIFIC_RESOURCE:
      return getSpecificResource();

    case START_DATE:
      return getStartDate();

    case SUB_STATUS:
      return getSubStatus();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case ALLOCATED_SERVICE_UNITS:
      return isSetAllocatedServiceUnits();
    case APPLICATIONS_TO_BE_USED:
      return isSetApplicationsToBeUsed();
    case END_DATE:
      return isSetEndDate();
    case PROJECT_ID:
      return isSetProjectId();
    case REJECTION_REASON:
      return isSetRejectionReason();
    case REQUESTED_SERVICE_UNITS:
      return isSetRequestedServiceUnits();
    case RESOURCE_TYPE:
      return isSetResourceType();
    case SPECIFIC_RESOURCE:
      return isSetSpecificResource();
    case START_DATE:
      return isSetStartDate();
    case SUB_STATUS:
      return isSetSubStatus();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof UserSpecificResourceDetail)
      return this.equals((UserSpecificResourceDetail)that);
    return false;
  }

  public boolean equals(UserSpecificResourceDetail that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_allocatedServiceUnits = true && this.isSetAllocatedServiceUnits();
    boolean that_present_allocatedServiceUnits = true && that.isSetAllocatedServiceUnits();
    if (this_present_allocatedServiceUnits || that_present_allocatedServiceUnits) {
      if (!(this_present_allocatedServiceUnits && that_present_allocatedServiceUnits))
        return false;
      if (this.allocatedServiceUnits != that.allocatedServiceUnits)
        return false;
    }

    boolean this_present_applicationsToBeUsed = true && this.isSetApplicationsToBeUsed();
    boolean that_present_applicationsToBeUsed = true && that.isSetApplicationsToBeUsed();
    if (this_present_applicationsToBeUsed || that_present_applicationsToBeUsed) {
      if (!(this_present_applicationsToBeUsed && that_present_applicationsToBeUsed))
        return false;
      if (!this.applicationsToBeUsed.equals(that.applicationsToBeUsed))
        return false;
    }

    boolean this_present_endDate = true && this.isSetEndDate();
    boolean that_present_endDate = true && that.isSetEndDate();
    if (this_present_endDate || that_present_endDate) {
      if (!(this_present_endDate && that_present_endDate))
        return false;
      if (this.endDate != that.endDate)
        return false;
    }

    boolean this_present_projectId = true && this.isSetProjectId();
    boolean that_present_projectId = true && that.isSetProjectId();
    if (this_present_projectId || that_present_projectId) {
      if (!(this_present_projectId && that_present_projectId))
        return false;
      if (this.projectId != that.projectId)
        return false;
    }

    boolean this_present_rejectionReason = true && this.isSetRejectionReason();
    boolean that_present_rejectionReason = true && that.isSetRejectionReason();
    if (this_present_rejectionReason || that_present_rejectionReason) {
      if (!(this_present_rejectionReason && that_present_rejectionReason))
        return false;
      if (!this.rejectionReason.equals(that.rejectionReason))
        return false;
    }

    boolean this_present_requestedServiceUnits = true && this.isSetRequestedServiceUnits();
    boolean that_present_requestedServiceUnits = true && that.isSetRequestedServiceUnits();
    if (this_present_requestedServiceUnits || that_present_requestedServiceUnits) {
      if (!(this_present_requestedServiceUnits && that_present_requestedServiceUnits))
        return false;
      if (this.requestedServiceUnits != that.requestedServiceUnits)
        return false;
    }

    boolean this_present_resourceType = true && this.isSetResourceType();
    boolean that_present_resourceType = true && that.isSetResourceType();
    if (this_present_resourceType || that_present_resourceType) {
      if (!(this_present_resourceType && that_present_resourceType))
        return false;
      if (!this.resourceType.equals(that.resourceType))
        return false;
    }

    boolean this_present_specificResource = true && this.isSetSpecificResource();
    boolean that_present_specificResource = true && that.isSetSpecificResource();
    if (this_present_specificResource || that_present_specificResource) {
      if (!(this_present_specificResource && that_present_specificResource))
        return false;
      if (!this.specificResource.equals(that.specificResource))
        return false;
    }

    boolean this_present_startDate = true && this.isSetStartDate();
    boolean that_present_startDate = true && that.isSetStartDate();
    if (this_present_startDate || that_present_startDate) {
      if (!(this_present_startDate && that_present_startDate))
        return false;
      if (this.startDate != that.startDate)
        return false;
    }

    boolean this_present_subStatus = true && this.isSetSubStatus();
    boolean that_present_subStatus = true && that.isSetSubStatus();
    if (this_present_subStatus || that_present_subStatus) {
      if (!(this_present_subStatus && that_present_subStatus))
        return false;
      if (!this.subStatus.equals(that.subStatus))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetId()) ? 131071 : 524287);
    if (isSetId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(id);

    hashCode = hashCode * 8191 + ((isSetAllocatedServiceUnits()) ? 131071 : 524287);
    if (isSetAllocatedServiceUnits())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(allocatedServiceUnits);

    hashCode = hashCode * 8191 + ((isSetApplicationsToBeUsed()) ? 131071 : 524287);
    if (isSetApplicationsToBeUsed())
      hashCode = hashCode * 8191 + applicationsToBeUsed.hashCode();

    hashCode = hashCode * 8191 + ((isSetEndDate()) ? 131071 : 524287);
    if (isSetEndDate())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(endDate);

    hashCode = hashCode * 8191 + ((isSetProjectId()) ? 131071 : 524287);
    if (isSetProjectId())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(projectId);

    hashCode = hashCode * 8191 + ((isSetRejectionReason()) ? 131071 : 524287);
    if (isSetRejectionReason())
      hashCode = hashCode * 8191 + rejectionReason.hashCode();

    hashCode = hashCode * 8191 + ((isSetRequestedServiceUnits()) ? 131071 : 524287);
    if (isSetRequestedServiceUnits())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(requestedServiceUnits);

    hashCode = hashCode * 8191 + ((isSetResourceType()) ? 131071 : 524287);
    if (isSetResourceType())
      hashCode = hashCode * 8191 + resourceType.hashCode();

    hashCode = hashCode * 8191 + ((isSetSpecificResource()) ? 131071 : 524287);
    if (isSetSpecificResource())
      hashCode = hashCode * 8191 + specificResource.hashCode();

    hashCode = hashCode * 8191 + ((isSetStartDate()) ? 131071 : 524287);
    if (isSetStartDate())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(startDate);

    hashCode = hashCode * 8191 + ((isSetSubStatus()) ? 131071 : 524287);
    if (isSetSubStatus())
      hashCode = hashCode * 8191 + subStatus.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(UserSpecificResourceDetail other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAllocatedServiceUnits()).compareTo(other.isSetAllocatedServiceUnits());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllocatedServiceUnits()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allocatedServiceUnits, other.allocatedServiceUnits);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetApplicationsToBeUsed()).compareTo(other.isSetApplicationsToBeUsed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApplicationsToBeUsed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.applicationsToBeUsed, other.applicationsToBeUsed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndDate()).compareTo(other.isSetEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endDate, other.endDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProjectId()).compareTo(other.isSetProjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.projectId, other.projectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRejectionReason()).compareTo(other.isSetRejectionReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRejectionReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rejectionReason, other.rejectionReason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRequestedServiceUnits()).compareTo(other.isSetRequestedServiceUnits());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestedServiceUnits()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestedServiceUnits, other.requestedServiceUnits);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetResourceType()).compareTo(other.isSetResourceType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResourceType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resourceType, other.resourceType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSpecificResource()).compareTo(other.isSetSpecificResource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSpecificResource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.specificResource, other.specificResource);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStartDate()).compareTo(other.isSetStartDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startDate, other.startDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSubStatus()).compareTo(other.isSetSubStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subStatus, other.subStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UserSpecificResourceDetail(");
    boolean first = true;

    if (isSetId()) {
      sb.append("id:");
      sb.append(this.id);
      first = false;
    }
    if (isSetAllocatedServiceUnits()) {
      if (!first) sb.append(", ");
      sb.append("allocatedServiceUnits:");
      sb.append(this.allocatedServiceUnits);
      first = false;
    }
    if (isSetApplicationsToBeUsed()) {
      if (!first) sb.append(", ");
      sb.append("applicationsToBeUsed:");
      if (this.applicationsToBeUsed == null) {
        sb.append("null");
      } else {
        sb.append(this.applicationsToBeUsed);
      }
      first = false;
    }
    if (isSetEndDate()) {
      if (!first) sb.append(", ");
      sb.append("endDate:");
      sb.append(this.endDate);
      first = false;
    }
    if (isSetProjectId()) {
      if (!first) sb.append(", ");
      sb.append("projectId:");
      sb.append(this.projectId);
      first = false;
    }
    if (isSetRejectionReason()) {
      if (!first) sb.append(", ");
      sb.append("rejectionReason:");
      if (this.rejectionReason == null) {
        sb.append("null");
      } else {
        sb.append(this.rejectionReason);
      }
      first = false;
    }
    if (isSetRequestedServiceUnits()) {
      if (!first) sb.append(", ");
      sb.append("requestedServiceUnits:");
      sb.append(this.requestedServiceUnits);
      first = false;
    }
    if (isSetResourceType()) {
      if (!first) sb.append(", ");
      sb.append("resourceType:");
      if (this.resourceType == null) {
        sb.append("null");
      } else {
        sb.append(this.resourceType);
      }
      first = false;
    }
    if (isSetSpecificResource()) {
      if (!first) sb.append(", ");
      sb.append("specificResource:");
      if (this.specificResource == null) {
        sb.append("null");
      } else {
        sb.append(this.specificResource);
      }
      first = false;
    }
    if (isSetStartDate()) {
      if (!first) sb.append(", ");
      sb.append("startDate:");
      sb.append(this.startDate);
      first = false;
    }
    if (isSetSubStatus()) {
      if (!first) sb.append(", ");
      sb.append("subStatus:");
      if (this.subStatus == null) {
        sb.append("null");
      } else {
        sb.append(this.subStatus);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserSpecificResourceDetailStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserSpecificResourceDetailStandardScheme getScheme() {
      return new UserSpecificResourceDetailStandardScheme();
    }
  }

  private static class UserSpecificResourceDetailStandardScheme extends org.apache.thrift.scheme.StandardScheme<UserSpecificResourceDetail> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserSpecificResourceDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ALLOCATED_SERVICE_UNITS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.allocatedServiceUnits = iprot.readI64();
              struct.setAllocatedServiceUnitsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APPLICATIONS_TO_BE_USED
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.applicationsToBeUsed = iprot.readString();
              struct.setApplicationsToBeUsedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.endDate = iprot.readI64();
              struct.setEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PROJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.projectId = iprot.readI64();
              struct.setProjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // REJECTION_REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.rejectionReason = iprot.readString();
              struct.setRejectionReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // REQUESTED_SERVICE_UNITS
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.requestedServiceUnits = iprot.readI64();
              struct.setRequestedServiceUnitsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RESOURCE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.resourceType = iprot.readString();
              struct.setResourceTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SPECIFIC_RESOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.specificResource = iprot.readString();
              struct.setSpecificResourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // START_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.startDate = iprot.readI64();
              struct.setStartDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SUB_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subStatus = iprot.readString();
              struct.setSubStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserSpecificResourceDetail struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetId()) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeI64(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAllocatedServiceUnits()) {
        oprot.writeFieldBegin(ALLOCATED_SERVICE_UNITS_FIELD_DESC);
        oprot.writeI64(struct.allocatedServiceUnits);
        oprot.writeFieldEnd();
      }
      if (struct.applicationsToBeUsed != null) {
        if (struct.isSetApplicationsToBeUsed()) {
          oprot.writeFieldBegin(APPLICATIONS_TO_BE_USED_FIELD_DESC);
          oprot.writeString(struct.applicationsToBeUsed);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetEndDate()) {
        oprot.writeFieldBegin(END_DATE_FIELD_DESC);
        oprot.writeI64(struct.endDate);
        oprot.writeFieldEnd();
      }
      if (struct.isSetProjectId()) {
        oprot.writeFieldBegin(PROJECT_ID_FIELD_DESC);
        oprot.writeI64(struct.projectId);
        oprot.writeFieldEnd();
      }
      if (struct.rejectionReason != null) {
        if (struct.isSetRejectionReason()) {
          oprot.writeFieldBegin(REJECTION_REASON_FIELD_DESC);
          oprot.writeString(struct.rejectionReason);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetRequestedServiceUnits()) {
        oprot.writeFieldBegin(REQUESTED_SERVICE_UNITS_FIELD_DESC);
        oprot.writeI64(struct.requestedServiceUnits);
        oprot.writeFieldEnd();
      }
      if (struct.resourceType != null) {
        if (struct.isSetResourceType()) {
          oprot.writeFieldBegin(RESOURCE_TYPE_FIELD_DESC);
          oprot.writeString(struct.resourceType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.specificResource != null) {
        if (struct.isSetSpecificResource()) {
          oprot.writeFieldBegin(SPECIFIC_RESOURCE_FIELD_DESC);
          oprot.writeString(struct.specificResource);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStartDate()) {
        oprot.writeFieldBegin(START_DATE_FIELD_DESC);
        oprot.writeI64(struct.startDate);
        oprot.writeFieldEnd();
      }
      if (struct.subStatus != null) {
        if (struct.isSetSubStatus()) {
          oprot.writeFieldBegin(SUB_STATUS_FIELD_DESC);
          oprot.writeString(struct.subStatus);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserSpecificResourceDetailTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserSpecificResourceDetailTupleScheme getScheme() {
      return new UserSpecificResourceDetailTupleScheme();
    }
  }

  private static class UserSpecificResourceDetailTupleScheme extends org.apache.thrift.scheme.TupleScheme<UserSpecificResourceDetail> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserSpecificResourceDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetAllocatedServiceUnits()) {
        optionals.set(1);
      }
      if (struct.isSetApplicationsToBeUsed()) {
        optionals.set(2);
      }
      if (struct.isSetEndDate()) {
        optionals.set(3);
      }
      if (struct.isSetProjectId()) {
        optionals.set(4);
      }
      if (struct.isSetRejectionReason()) {
        optionals.set(5);
      }
      if (struct.isSetRequestedServiceUnits()) {
        optionals.set(6);
      }
      if (struct.isSetResourceType()) {
        optionals.set(7);
      }
      if (struct.isSetSpecificResource()) {
        optionals.set(8);
      }
      if (struct.isSetStartDate()) {
        optionals.set(9);
      }
      if (struct.isSetSubStatus()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetAllocatedServiceUnits()) {
        oprot.writeI64(struct.allocatedServiceUnits);
      }
      if (struct.isSetApplicationsToBeUsed()) {
        oprot.writeString(struct.applicationsToBeUsed);
      }
      if (struct.isSetEndDate()) {
        oprot.writeI64(struct.endDate);
      }
      if (struct.isSetProjectId()) {
        oprot.writeI64(struct.projectId);
      }
      if (struct.isSetRejectionReason()) {
        oprot.writeString(struct.rejectionReason);
      }
      if (struct.isSetRequestedServiceUnits()) {
        oprot.writeI64(struct.requestedServiceUnits);
      }
      if (struct.isSetResourceType()) {
        oprot.writeString(struct.resourceType);
      }
      if (struct.isSetSpecificResource()) {
        oprot.writeString(struct.specificResource);
      }
      if (struct.isSetStartDate()) {
        oprot.writeI64(struct.startDate);
      }
      if (struct.isSetSubStatus()) {
        oprot.writeString(struct.subStatus);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserSpecificResourceDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.allocatedServiceUnits = iprot.readI64();
        struct.setAllocatedServiceUnitsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.applicationsToBeUsed = iprot.readString();
        struct.setApplicationsToBeUsedIsSet(true);
      }
      if (incoming.get(3)) {
        struct.endDate = iprot.readI64();
        struct.setEndDateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.projectId = iprot.readI64();
        struct.setProjectIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.rejectionReason = iprot.readString();
        struct.setRejectionReasonIsSet(true);
      }
      if (incoming.get(6)) {
        struct.requestedServiceUnits = iprot.readI64();
        struct.setRequestedServiceUnitsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.resourceType = iprot.readString();
        struct.setResourceTypeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.specificResource = iprot.readString();
        struct.setSpecificResourceIsSet(true);
      }
      if (incoming.get(9)) {
        struct.startDate = iprot.readI64();
        struct.setStartDateIsSet(true);
      }
      if (incoming.get(10)) {
        struct.subStatus = iprot.readString();
        struct.setSubStatusIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

