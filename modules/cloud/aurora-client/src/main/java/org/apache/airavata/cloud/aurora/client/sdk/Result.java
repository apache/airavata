/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.airavata.cloud.aurora.client.sdk;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
public class Result extends org.apache.thrift.TUnion<Result, Result._Fields> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Result");
  private static final org.apache.thrift.protocol.TField POPULATE_JOB_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("populateJobResult", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField SCHEDULE_STATUS_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("scheduleStatusResult", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField GET_JOBS_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("getJobsResult", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField GET_QUOTA_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("getQuotaResult", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField LIST_BACKUPS_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("listBackupsResult", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField START_MAINTENANCE_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("startMaintenanceResult", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField DRAIN_HOSTS_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("drainHostsResult", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField QUERY_RECOVERY_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("queryRecoveryResult", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField MAINTENANCE_STATUS_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("maintenanceStatusResult", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField END_MAINTENANCE_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("endMaintenanceResult", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField ROLE_SUMMARY_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("roleSummaryResult", org.apache.thrift.protocol.TType.STRUCT, (short)17);
  private static final org.apache.thrift.protocol.TField JOB_SUMMARY_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("jobSummaryResult", org.apache.thrift.protocol.TType.STRUCT, (short)18);
  private static final org.apache.thrift.protocol.TField CONFIG_SUMMARY_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("configSummaryResult", org.apache.thrift.protocol.TType.STRUCT, (short)20);
  private static final org.apache.thrift.protocol.TField GET_PENDING_REASON_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("getPendingReasonResult", org.apache.thrift.protocol.TType.STRUCT, (short)21);
  private static final org.apache.thrift.protocol.TField START_JOB_UPDATE_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("startJobUpdateResult", org.apache.thrift.protocol.TType.STRUCT, (short)22);
  private static final org.apache.thrift.protocol.TField GET_JOB_UPDATE_SUMMARIES_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("getJobUpdateSummariesResult", org.apache.thrift.protocol.TType.STRUCT, (short)23);
  private static final org.apache.thrift.protocol.TField GET_JOB_UPDATE_DETAILS_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("getJobUpdateDetailsResult", org.apache.thrift.protocol.TType.STRUCT, (short)24);
  private static final org.apache.thrift.protocol.TField PULSE_JOB_UPDATE_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("pulseJobUpdateResult", org.apache.thrift.protocol.TType.STRUCT, (short)25);
  private static final org.apache.thrift.protocol.TField GET_JOB_UPDATE_DIFF_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("getJobUpdateDiffResult", org.apache.thrift.protocol.TType.STRUCT, (short)26);
  private static final org.apache.thrift.protocol.TField GET_TIER_CONFIG_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("getTierConfigResult", org.apache.thrift.protocol.TType.STRUCT, (short)27);

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    POPULATE_JOB_RESULT((short)1, "populateJobResult"),
    SCHEDULE_STATUS_RESULT((short)3, "scheduleStatusResult"),
    GET_JOBS_RESULT((short)4, "getJobsResult"),
    GET_QUOTA_RESULT((short)5, "getQuotaResult"),
    LIST_BACKUPS_RESULT((short)6, "listBackupsResult"),
    START_MAINTENANCE_RESULT((short)7, "startMaintenanceResult"),
    DRAIN_HOSTS_RESULT((short)8, "drainHostsResult"),
    QUERY_RECOVERY_RESULT((short)9, "queryRecoveryResult"),
    MAINTENANCE_STATUS_RESULT((short)10, "maintenanceStatusResult"),
    END_MAINTENANCE_RESULT((short)11, "endMaintenanceResult"),
    ROLE_SUMMARY_RESULT((short)17, "roleSummaryResult"),
    JOB_SUMMARY_RESULT((short)18, "jobSummaryResult"),
    CONFIG_SUMMARY_RESULT((short)20, "configSummaryResult"),
    GET_PENDING_REASON_RESULT((short)21, "getPendingReasonResult"),
    START_JOB_UPDATE_RESULT((short)22, "startJobUpdateResult"),
    GET_JOB_UPDATE_SUMMARIES_RESULT((short)23, "getJobUpdateSummariesResult"),
    GET_JOB_UPDATE_DETAILS_RESULT((short)24, "getJobUpdateDetailsResult"),
    PULSE_JOB_UPDATE_RESULT((short)25, "pulseJobUpdateResult"),
    GET_JOB_UPDATE_DIFF_RESULT((short)26, "getJobUpdateDiffResult"),
    GET_TIER_CONFIG_RESULT((short)27, "getTierConfigResult");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // POPULATE_JOB_RESULT
          return POPULATE_JOB_RESULT;
        case 3: // SCHEDULE_STATUS_RESULT
          return SCHEDULE_STATUS_RESULT;
        case 4: // GET_JOBS_RESULT
          return GET_JOBS_RESULT;
        case 5: // GET_QUOTA_RESULT
          return GET_QUOTA_RESULT;
        case 6: // LIST_BACKUPS_RESULT
          return LIST_BACKUPS_RESULT;
        case 7: // START_MAINTENANCE_RESULT
          return START_MAINTENANCE_RESULT;
        case 8: // DRAIN_HOSTS_RESULT
          return DRAIN_HOSTS_RESULT;
        case 9: // QUERY_RECOVERY_RESULT
          return QUERY_RECOVERY_RESULT;
        case 10: // MAINTENANCE_STATUS_RESULT
          return MAINTENANCE_STATUS_RESULT;
        case 11: // END_MAINTENANCE_RESULT
          return END_MAINTENANCE_RESULT;
        case 17: // ROLE_SUMMARY_RESULT
          return ROLE_SUMMARY_RESULT;
        case 18: // JOB_SUMMARY_RESULT
          return JOB_SUMMARY_RESULT;
        case 20: // CONFIG_SUMMARY_RESULT
          return CONFIG_SUMMARY_RESULT;
        case 21: // GET_PENDING_REASON_RESULT
          return GET_PENDING_REASON_RESULT;
        case 22: // START_JOB_UPDATE_RESULT
          return START_JOB_UPDATE_RESULT;
        case 23: // GET_JOB_UPDATE_SUMMARIES_RESULT
          return GET_JOB_UPDATE_SUMMARIES_RESULT;
        case 24: // GET_JOB_UPDATE_DETAILS_RESULT
          return GET_JOB_UPDATE_DETAILS_RESULT;
        case 25: // PULSE_JOB_UPDATE_RESULT
          return PULSE_JOB_UPDATE_RESULT;
        case 26: // GET_JOB_UPDATE_DIFF_RESULT
          return GET_JOB_UPDATE_DIFF_RESULT;
        case 27: // GET_TIER_CONFIG_RESULT
          return GET_TIER_CONFIG_RESULT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.POPULATE_JOB_RESULT, new org.apache.thrift.meta_data.FieldMetaData("populateJobResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PopulateJobResult.class)));
    tmpMap.put(_Fields.SCHEDULE_STATUS_RESULT, new org.apache.thrift.meta_data.FieldMetaData("scheduleStatusResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ScheduleStatusResult.class)));
    tmpMap.put(_Fields.GET_JOBS_RESULT, new org.apache.thrift.meta_data.FieldMetaData("getJobsResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GetJobsResult.class)));
    tmpMap.put(_Fields.GET_QUOTA_RESULT, new org.apache.thrift.meta_data.FieldMetaData("getQuotaResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GetQuotaResult.class)));
    tmpMap.put(_Fields.LIST_BACKUPS_RESULT, new org.apache.thrift.meta_data.FieldMetaData("listBackupsResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ListBackupsResult.class)));
    tmpMap.put(_Fields.START_MAINTENANCE_RESULT, new org.apache.thrift.meta_data.FieldMetaData("startMaintenanceResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StartMaintenanceResult.class)));
    tmpMap.put(_Fields.DRAIN_HOSTS_RESULT, new org.apache.thrift.meta_data.FieldMetaData("drainHostsResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DrainHostsResult.class)));
    tmpMap.put(_Fields.QUERY_RECOVERY_RESULT, new org.apache.thrift.meta_data.FieldMetaData("queryRecoveryResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, QueryRecoveryResult.class)));
    tmpMap.put(_Fields.MAINTENANCE_STATUS_RESULT, new org.apache.thrift.meta_data.FieldMetaData("maintenanceStatusResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MaintenanceStatusResult.class)));
    tmpMap.put(_Fields.END_MAINTENANCE_RESULT, new org.apache.thrift.meta_data.FieldMetaData("endMaintenanceResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EndMaintenanceResult.class)));
    tmpMap.put(_Fields.ROLE_SUMMARY_RESULT, new org.apache.thrift.meta_data.FieldMetaData("roleSummaryResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, RoleSummaryResult.class)));
    tmpMap.put(_Fields.JOB_SUMMARY_RESULT, new org.apache.thrift.meta_data.FieldMetaData("jobSummaryResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, JobSummaryResult.class)));
    tmpMap.put(_Fields.CONFIG_SUMMARY_RESULT, new org.apache.thrift.meta_data.FieldMetaData("configSummaryResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ConfigSummaryResult.class)));
    tmpMap.put(_Fields.GET_PENDING_REASON_RESULT, new org.apache.thrift.meta_data.FieldMetaData("getPendingReasonResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GetPendingReasonResult.class)));
    tmpMap.put(_Fields.START_JOB_UPDATE_RESULT, new org.apache.thrift.meta_data.FieldMetaData("startJobUpdateResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, StartJobUpdateResult.class)));
    tmpMap.put(_Fields.GET_JOB_UPDATE_SUMMARIES_RESULT, new org.apache.thrift.meta_data.FieldMetaData("getJobUpdateSummariesResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GetJobUpdateSummariesResult.class)));
    tmpMap.put(_Fields.GET_JOB_UPDATE_DETAILS_RESULT, new org.apache.thrift.meta_data.FieldMetaData("getJobUpdateDetailsResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GetJobUpdateDetailsResult.class)));
    tmpMap.put(_Fields.PULSE_JOB_UPDATE_RESULT, new org.apache.thrift.meta_data.FieldMetaData("pulseJobUpdateResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PulseJobUpdateResult.class)));
    tmpMap.put(_Fields.GET_JOB_UPDATE_DIFF_RESULT, new org.apache.thrift.meta_data.FieldMetaData("getJobUpdateDiffResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GetJobUpdateDiffResult.class)));
    tmpMap.put(_Fields.GET_TIER_CONFIG_RESULT, new org.apache.thrift.meta_data.FieldMetaData("getTierConfigResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GetTierConfigResult.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Result.class, metaDataMap);
  }

  public Result() {
    super();
  }

  public Result(_Fields setField, Object value) {
    super(setField, value);
  }

  public Result(Result other) {
    super(other);
  }
  public Result deepCopy() {
    return new Result(this);
  }

  public static Result populateJobResult(PopulateJobResult value) {
    Result x = new Result();
    x.setPopulateJobResult(value);
    return x;
  }

  public static Result scheduleStatusResult(ScheduleStatusResult value) {
    Result x = new Result();
    x.setScheduleStatusResult(value);
    return x;
  }

  public static Result getJobsResult(GetJobsResult value) {
    Result x = new Result();
    x.setGetJobsResult(value);
    return x;
  }

  public static Result getQuotaResult(GetQuotaResult value) {
    Result x = new Result();
    x.setGetQuotaResult(value);
    return x;
  }

  public static Result listBackupsResult(ListBackupsResult value) {
    Result x = new Result();
    x.setListBackupsResult(value);
    return x;
  }

  public static Result startMaintenanceResult(StartMaintenanceResult value) {
    Result x = new Result();
    x.setStartMaintenanceResult(value);
    return x;
  }

  public static Result drainHostsResult(DrainHostsResult value) {
    Result x = new Result();
    x.setDrainHostsResult(value);
    return x;
  }

  public static Result queryRecoveryResult(QueryRecoveryResult value) {
    Result x = new Result();
    x.setQueryRecoveryResult(value);
    return x;
  }

  public static Result maintenanceStatusResult(MaintenanceStatusResult value) {
    Result x = new Result();
    x.setMaintenanceStatusResult(value);
    return x;
  }

  public static Result endMaintenanceResult(EndMaintenanceResult value) {
    Result x = new Result();
    x.setEndMaintenanceResult(value);
    return x;
  }

  public static Result roleSummaryResult(RoleSummaryResult value) {
    Result x = new Result();
    x.setRoleSummaryResult(value);
    return x;
  }

  public static Result jobSummaryResult(JobSummaryResult value) {
    Result x = new Result();
    x.setJobSummaryResult(value);
    return x;
  }

  public static Result configSummaryResult(ConfigSummaryResult value) {
    Result x = new Result();
    x.setConfigSummaryResult(value);
    return x;
  }

  public static Result getPendingReasonResult(GetPendingReasonResult value) {
    Result x = new Result();
    x.setGetPendingReasonResult(value);
    return x;
  }

  public static Result startJobUpdateResult(StartJobUpdateResult value) {
    Result x = new Result();
    x.setStartJobUpdateResult(value);
    return x;
  }

  public static Result getJobUpdateSummariesResult(GetJobUpdateSummariesResult value) {
    Result x = new Result();
    x.setGetJobUpdateSummariesResult(value);
    return x;
  }

  public static Result getJobUpdateDetailsResult(GetJobUpdateDetailsResult value) {
    Result x = new Result();
    x.setGetJobUpdateDetailsResult(value);
    return x;
  }

  public static Result pulseJobUpdateResult(PulseJobUpdateResult value) {
    Result x = new Result();
    x.setPulseJobUpdateResult(value);
    return x;
  }

  public static Result getJobUpdateDiffResult(GetJobUpdateDiffResult value) {
    Result x = new Result();
    x.setGetJobUpdateDiffResult(value);
    return x;
  }

  public static Result getTierConfigResult(GetTierConfigResult value) {
    Result x = new Result();
    x.setGetTierConfigResult(value);
    return x;
  }


  @Override
  protected void checkType(_Fields setField, Object value) throws ClassCastException {
    switch (setField) {
      case POPULATE_JOB_RESULT:
        if (value instanceof PopulateJobResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type PopulateJobResult for field 'populateJobResult', but got " + value.getClass().getSimpleName());
      case SCHEDULE_STATUS_RESULT:
        if (value instanceof ScheduleStatusResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type ScheduleStatusResult for field 'scheduleStatusResult', but got " + value.getClass().getSimpleName());
      case GET_JOBS_RESULT:
        if (value instanceof GetJobsResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type GetJobsResult for field 'getJobsResult', but got " + value.getClass().getSimpleName());
      case GET_QUOTA_RESULT:
        if (value instanceof GetQuotaResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type GetQuotaResult for field 'getQuotaResult', but got " + value.getClass().getSimpleName());
      case LIST_BACKUPS_RESULT:
        if (value instanceof ListBackupsResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type ListBackupsResult for field 'listBackupsResult', but got " + value.getClass().getSimpleName());
      case START_MAINTENANCE_RESULT:
        if (value instanceof StartMaintenanceResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type StartMaintenanceResult for field 'startMaintenanceResult', but got " + value.getClass().getSimpleName());
      case DRAIN_HOSTS_RESULT:
        if (value instanceof DrainHostsResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type DrainHostsResult for field 'drainHostsResult', but got " + value.getClass().getSimpleName());
      case QUERY_RECOVERY_RESULT:
        if (value instanceof QueryRecoveryResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type QueryRecoveryResult for field 'queryRecoveryResult', but got " + value.getClass().getSimpleName());
      case MAINTENANCE_STATUS_RESULT:
        if (value instanceof MaintenanceStatusResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type MaintenanceStatusResult for field 'maintenanceStatusResult', but got " + value.getClass().getSimpleName());
      case END_MAINTENANCE_RESULT:
        if (value instanceof EndMaintenanceResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type EndMaintenanceResult for field 'endMaintenanceResult', but got " + value.getClass().getSimpleName());
      case ROLE_SUMMARY_RESULT:
        if (value instanceof RoleSummaryResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type RoleSummaryResult for field 'roleSummaryResult', but got " + value.getClass().getSimpleName());
      case JOB_SUMMARY_RESULT:
        if (value instanceof JobSummaryResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type JobSummaryResult for field 'jobSummaryResult', but got " + value.getClass().getSimpleName());
      case CONFIG_SUMMARY_RESULT:
        if (value instanceof ConfigSummaryResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type ConfigSummaryResult for field 'configSummaryResult', but got " + value.getClass().getSimpleName());
      case GET_PENDING_REASON_RESULT:
        if (value instanceof GetPendingReasonResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type GetPendingReasonResult for field 'getPendingReasonResult', but got " + value.getClass().getSimpleName());
      case START_JOB_UPDATE_RESULT:
        if (value instanceof StartJobUpdateResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type StartJobUpdateResult for field 'startJobUpdateResult', but got " + value.getClass().getSimpleName());
      case GET_JOB_UPDATE_SUMMARIES_RESULT:
        if (value instanceof GetJobUpdateSummariesResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type GetJobUpdateSummariesResult for field 'getJobUpdateSummariesResult', but got " + value.getClass().getSimpleName());
      case GET_JOB_UPDATE_DETAILS_RESULT:
        if (value instanceof GetJobUpdateDetailsResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type GetJobUpdateDetailsResult for field 'getJobUpdateDetailsResult', but got " + value.getClass().getSimpleName());
      case PULSE_JOB_UPDATE_RESULT:
        if (value instanceof PulseJobUpdateResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type PulseJobUpdateResult for field 'pulseJobUpdateResult', but got " + value.getClass().getSimpleName());
      case GET_JOB_UPDATE_DIFF_RESULT:
        if (value instanceof GetJobUpdateDiffResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type GetJobUpdateDiffResult for field 'getJobUpdateDiffResult', but got " + value.getClass().getSimpleName());
      case GET_TIER_CONFIG_RESULT:
        if (value instanceof GetTierConfigResult) {
          break;
        }
        throw new ClassCastException("Was expecting value of type GetTierConfigResult for field 'getTierConfigResult', but got " + value.getClass().getSimpleName());
      default:
        throw new IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected Object standardSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TField field) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(field.id);
    if (setField != null) {
      switch (setField) {
        case POPULATE_JOB_RESULT:
          if (field.type == POPULATE_JOB_RESULT_FIELD_DESC.type) {
            PopulateJobResult populateJobResult;
            populateJobResult = new PopulateJobResult();
            populateJobResult.read(iprot);
            return populateJobResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case SCHEDULE_STATUS_RESULT:
          if (field.type == SCHEDULE_STATUS_RESULT_FIELD_DESC.type) {
            ScheduleStatusResult scheduleStatusResult;
            scheduleStatusResult = new ScheduleStatusResult();
            scheduleStatusResult.read(iprot);
            return scheduleStatusResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case GET_JOBS_RESULT:
          if (field.type == GET_JOBS_RESULT_FIELD_DESC.type) {
            GetJobsResult getJobsResult;
            getJobsResult = new GetJobsResult();
            getJobsResult.read(iprot);
            return getJobsResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case GET_QUOTA_RESULT:
          if (field.type == GET_QUOTA_RESULT_FIELD_DESC.type) {
            GetQuotaResult getQuotaResult;
            getQuotaResult = new GetQuotaResult();
            getQuotaResult.read(iprot);
            return getQuotaResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case LIST_BACKUPS_RESULT:
          if (field.type == LIST_BACKUPS_RESULT_FIELD_DESC.type) {
            ListBackupsResult listBackupsResult;
            listBackupsResult = new ListBackupsResult();
            listBackupsResult.read(iprot);
            return listBackupsResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case START_MAINTENANCE_RESULT:
          if (field.type == START_MAINTENANCE_RESULT_FIELD_DESC.type) {
            StartMaintenanceResult startMaintenanceResult;
            startMaintenanceResult = new StartMaintenanceResult();
            startMaintenanceResult.read(iprot);
            return startMaintenanceResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case DRAIN_HOSTS_RESULT:
          if (field.type == DRAIN_HOSTS_RESULT_FIELD_DESC.type) {
            DrainHostsResult drainHostsResult;
            drainHostsResult = new DrainHostsResult();
            drainHostsResult.read(iprot);
            return drainHostsResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case QUERY_RECOVERY_RESULT:
          if (field.type == QUERY_RECOVERY_RESULT_FIELD_DESC.type) {
            QueryRecoveryResult queryRecoveryResult;
            queryRecoveryResult = new QueryRecoveryResult();
            queryRecoveryResult.read(iprot);
            return queryRecoveryResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case MAINTENANCE_STATUS_RESULT:
          if (field.type == MAINTENANCE_STATUS_RESULT_FIELD_DESC.type) {
            MaintenanceStatusResult maintenanceStatusResult;
            maintenanceStatusResult = new MaintenanceStatusResult();
            maintenanceStatusResult.read(iprot);
            return maintenanceStatusResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case END_MAINTENANCE_RESULT:
          if (field.type == END_MAINTENANCE_RESULT_FIELD_DESC.type) {
            EndMaintenanceResult endMaintenanceResult;
            endMaintenanceResult = new EndMaintenanceResult();
            endMaintenanceResult.read(iprot);
            return endMaintenanceResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case ROLE_SUMMARY_RESULT:
          if (field.type == ROLE_SUMMARY_RESULT_FIELD_DESC.type) {
            RoleSummaryResult roleSummaryResult;
            roleSummaryResult = new RoleSummaryResult();
            roleSummaryResult.read(iprot);
            return roleSummaryResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case JOB_SUMMARY_RESULT:
          if (field.type == JOB_SUMMARY_RESULT_FIELD_DESC.type) {
            JobSummaryResult jobSummaryResult;
            jobSummaryResult = new JobSummaryResult();
            jobSummaryResult.read(iprot);
            return jobSummaryResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case CONFIG_SUMMARY_RESULT:
          if (field.type == CONFIG_SUMMARY_RESULT_FIELD_DESC.type) {
            ConfigSummaryResult configSummaryResult;
            configSummaryResult = new ConfigSummaryResult();
            configSummaryResult.read(iprot);
            return configSummaryResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case GET_PENDING_REASON_RESULT:
          if (field.type == GET_PENDING_REASON_RESULT_FIELD_DESC.type) {
            GetPendingReasonResult getPendingReasonResult;
            getPendingReasonResult = new GetPendingReasonResult();
            getPendingReasonResult.read(iprot);
            return getPendingReasonResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case START_JOB_UPDATE_RESULT:
          if (field.type == START_JOB_UPDATE_RESULT_FIELD_DESC.type) {
            StartJobUpdateResult startJobUpdateResult;
            startJobUpdateResult = new StartJobUpdateResult();
            startJobUpdateResult.read(iprot);
            return startJobUpdateResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case GET_JOB_UPDATE_SUMMARIES_RESULT:
          if (field.type == GET_JOB_UPDATE_SUMMARIES_RESULT_FIELD_DESC.type) {
            GetJobUpdateSummariesResult getJobUpdateSummariesResult;
            getJobUpdateSummariesResult = new GetJobUpdateSummariesResult();
            getJobUpdateSummariesResult.read(iprot);
            return getJobUpdateSummariesResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case GET_JOB_UPDATE_DETAILS_RESULT:
          if (field.type == GET_JOB_UPDATE_DETAILS_RESULT_FIELD_DESC.type) {
            GetJobUpdateDetailsResult getJobUpdateDetailsResult;
            getJobUpdateDetailsResult = new GetJobUpdateDetailsResult();
            getJobUpdateDetailsResult.read(iprot);
            return getJobUpdateDetailsResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case PULSE_JOB_UPDATE_RESULT:
          if (field.type == PULSE_JOB_UPDATE_RESULT_FIELD_DESC.type) {
            PulseJobUpdateResult pulseJobUpdateResult;
            pulseJobUpdateResult = new PulseJobUpdateResult();
            pulseJobUpdateResult.read(iprot);
            return pulseJobUpdateResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case GET_JOB_UPDATE_DIFF_RESULT:
          if (field.type == GET_JOB_UPDATE_DIFF_RESULT_FIELD_DESC.type) {
            GetJobUpdateDiffResult getJobUpdateDiffResult;
            getJobUpdateDiffResult = new GetJobUpdateDiffResult();
            getJobUpdateDiffResult.read(iprot);
            return getJobUpdateDiffResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        case GET_TIER_CONFIG_RESULT:
          if (field.type == GET_TIER_CONFIG_RESULT_FIELD_DESC.type) {
            GetTierConfigResult getTierConfigResult;
            getTierConfigResult = new GetTierConfigResult();
            getTierConfigResult.read(iprot);
            return getTierConfigResult;
          } else {
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
            return null;
          }
        default:
          throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      return null;
    }
  }

  @Override
  protected void standardSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case POPULATE_JOB_RESULT:
        PopulateJobResult populateJobResult = (PopulateJobResult)value_;
        populateJobResult.write(oprot);
        return;
      case SCHEDULE_STATUS_RESULT:
        ScheduleStatusResult scheduleStatusResult = (ScheduleStatusResult)value_;
        scheduleStatusResult.write(oprot);
        return;
      case GET_JOBS_RESULT:
        GetJobsResult getJobsResult = (GetJobsResult)value_;
        getJobsResult.write(oprot);
        return;
      case GET_QUOTA_RESULT:
        GetQuotaResult getQuotaResult = (GetQuotaResult)value_;
        getQuotaResult.write(oprot);
        return;
      case LIST_BACKUPS_RESULT:
        ListBackupsResult listBackupsResult = (ListBackupsResult)value_;
        listBackupsResult.write(oprot);
        return;
      case START_MAINTENANCE_RESULT:
        StartMaintenanceResult startMaintenanceResult = (StartMaintenanceResult)value_;
        startMaintenanceResult.write(oprot);
        return;
      case DRAIN_HOSTS_RESULT:
        DrainHostsResult drainHostsResult = (DrainHostsResult)value_;
        drainHostsResult.write(oprot);
        return;
      case QUERY_RECOVERY_RESULT:
        QueryRecoveryResult queryRecoveryResult = (QueryRecoveryResult)value_;
        queryRecoveryResult.write(oprot);
        return;
      case MAINTENANCE_STATUS_RESULT:
        MaintenanceStatusResult maintenanceStatusResult = (MaintenanceStatusResult)value_;
        maintenanceStatusResult.write(oprot);
        return;
      case END_MAINTENANCE_RESULT:
        EndMaintenanceResult endMaintenanceResult = (EndMaintenanceResult)value_;
        endMaintenanceResult.write(oprot);
        return;
      case ROLE_SUMMARY_RESULT:
        RoleSummaryResult roleSummaryResult = (RoleSummaryResult)value_;
        roleSummaryResult.write(oprot);
        return;
      case JOB_SUMMARY_RESULT:
        JobSummaryResult jobSummaryResult = (JobSummaryResult)value_;
        jobSummaryResult.write(oprot);
        return;
      case CONFIG_SUMMARY_RESULT:
        ConfigSummaryResult configSummaryResult = (ConfigSummaryResult)value_;
        configSummaryResult.write(oprot);
        return;
      case GET_PENDING_REASON_RESULT:
        GetPendingReasonResult getPendingReasonResult = (GetPendingReasonResult)value_;
        getPendingReasonResult.write(oprot);
        return;
      case START_JOB_UPDATE_RESULT:
        StartJobUpdateResult startJobUpdateResult = (StartJobUpdateResult)value_;
        startJobUpdateResult.write(oprot);
        return;
      case GET_JOB_UPDATE_SUMMARIES_RESULT:
        GetJobUpdateSummariesResult getJobUpdateSummariesResult = (GetJobUpdateSummariesResult)value_;
        getJobUpdateSummariesResult.write(oprot);
        return;
      case GET_JOB_UPDATE_DETAILS_RESULT:
        GetJobUpdateDetailsResult getJobUpdateDetailsResult = (GetJobUpdateDetailsResult)value_;
        getJobUpdateDetailsResult.write(oprot);
        return;
      case PULSE_JOB_UPDATE_RESULT:
        PulseJobUpdateResult pulseJobUpdateResult = (PulseJobUpdateResult)value_;
        pulseJobUpdateResult.write(oprot);
        return;
      case GET_JOB_UPDATE_DIFF_RESULT:
        GetJobUpdateDiffResult getJobUpdateDiffResult = (GetJobUpdateDiffResult)value_;
        getJobUpdateDiffResult.write(oprot);
        return;
      case GET_TIER_CONFIG_RESULT:
        GetTierConfigResult getTierConfigResult = (GetTierConfigResult)value_;
        getTierConfigResult.write(oprot);
        return;
      default:
        throw new IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected Object tupleSchemeReadValue(org.apache.thrift.protocol.TProtocol iprot, short fieldID) throws org.apache.thrift.TException {
    _Fields setField = _Fields.findByThriftId(fieldID);
    if (setField != null) {
      switch (setField) {
        case POPULATE_JOB_RESULT:
          PopulateJobResult populateJobResult;
          populateJobResult = new PopulateJobResult();
          populateJobResult.read(iprot);
          return populateJobResult;
        case SCHEDULE_STATUS_RESULT:
          ScheduleStatusResult scheduleStatusResult;
          scheduleStatusResult = new ScheduleStatusResult();
          scheduleStatusResult.read(iprot);
          return scheduleStatusResult;
        case GET_JOBS_RESULT:
          GetJobsResult getJobsResult;
          getJobsResult = new GetJobsResult();
          getJobsResult.read(iprot);
          return getJobsResult;
        case GET_QUOTA_RESULT:
          GetQuotaResult getQuotaResult;
          getQuotaResult = new GetQuotaResult();
          getQuotaResult.read(iprot);
          return getQuotaResult;
        case LIST_BACKUPS_RESULT:
          ListBackupsResult listBackupsResult;
          listBackupsResult = new ListBackupsResult();
          listBackupsResult.read(iprot);
          return listBackupsResult;
        case START_MAINTENANCE_RESULT:
          StartMaintenanceResult startMaintenanceResult;
          startMaintenanceResult = new StartMaintenanceResult();
          startMaintenanceResult.read(iprot);
          return startMaintenanceResult;
        case DRAIN_HOSTS_RESULT:
          DrainHostsResult drainHostsResult;
          drainHostsResult = new DrainHostsResult();
          drainHostsResult.read(iprot);
          return drainHostsResult;
        case QUERY_RECOVERY_RESULT:
          QueryRecoveryResult queryRecoveryResult;
          queryRecoveryResult = new QueryRecoveryResult();
          queryRecoveryResult.read(iprot);
          return queryRecoveryResult;
        case MAINTENANCE_STATUS_RESULT:
          MaintenanceStatusResult maintenanceStatusResult;
          maintenanceStatusResult = new MaintenanceStatusResult();
          maintenanceStatusResult.read(iprot);
          return maintenanceStatusResult;
        case END_MAINTENANCE_RESULT:
          EndMaintenanceResult endMaintenanceResult;
          endMaintenanceResult = new EndMaintenanceResult();
          endMaintenanceResult.read(iprot);
          return endMaintenanceResult;
        case ROLE_SUMMARY_RESULT:
          RoleSummaryResult roleSummaryResult;
          roleSummaryResult = new RoleSummaryResult();
          roleSummaryResult.read(iprot);
          return roleSummaryResult;
        case JOB_SUMMARY_RESULT:
          JobSummaryResult jobSummaryResult;
          jobSummaryResult = new JobSummaryResult();
          jobSummaryResult.read(iprot);
          return jobSummaryResult;
        case CONFIG_SUMMARY_RESULT:
          ConfigSummaryResult configSummaryResult;
          configSummaryResult = new ConfigSummaryResult();
          configSummaryResult.read(iprot);
          return configSummaryResult;
        case GET_PENDING_REASON_RESULT:
          GetPendingReasonResult getPendingReasonResult;
          getPendingReasonResult = new GetPendingReasonResult();
          getPendingReasonResult.read(iprot);
          return getPendingReasonResult;
        case START_JOB_UPDATE_RESULT:
          StartJobUpdateResult startJobUpdateResult;
          startJobUpdateResult = new StartJobUpdateResult();
          startJobUpdateResult.read(iprot);
          return startJobUpdateResult;
        case GET_JOB_UPDATE_SUMMARIES_RESULT:
          GetJobUpdateSummariesResult getJobUpdateSummariesResult;
          getJobUpdateSummariesResult = new GetJobUpdateSummariesResult();
          getJobUpdateSummariesResult.read(iprot);
          return getJobUpdateSummariesResult;
        case GET_JOB_UPDATE_DETAILS_RESULT:
          GetJobUpdateDetailsResult getJobUpdateDetailsResult;
          getJobUpdateDetailsResult = new GetJobUpdateDetailsResult();
          getJobUpdateDetailsResult.read(iprot);
          return getJobUpdateDetailsResult;
        case PULSE_JOB_UPDATE_RESULT:
          PulseJobUpdateResult pulseJobUpdateResult;
          pulseJobUpdateResult = new PulseJobUpdateResult();
          pulseJobUpdateResult.read(iprot);
          return pulseJobUpdateResult;
        case GET_JOB_UPDATE_DIFF_RESULT:
          GetJobUpdateDiffResult getJobUpdateDiffResult;
          getJobUpdateDiffResult = new GetJobUpdateDiffResult();
          getJobUpdateDiffResult.read(iprot);
          return getJobUpdateDiffResult;
        case GET_TIER_CONFIG_RESULT:
          GetTierConfigResult getTierConfigResult;
          getTierConfigResult = new GetTierConfigResult();
          getTierConfigResult.read(iprot);
          return getTierConfigResult;
        default:
          throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
      }
    } else {
      throw new TProtocolException("Couldn't find a field with field id " + fieldID);
    }
  }

  @Override
  protected void tupleSchemeWriteValue(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    switch (setField_) {
      case POPULATE_JOB_RESULT:
        PopulateJobResult populateJobResult = (PopulateJobResult)value_;
        populateJobResult.write(oprot);
        return;
      case SCHEDULE_STATUS_RESULT:
        ScheduleStatusResult scheduleStatusResult = (ScheduleStatusResult)value_;
        scheduleStatusResult.write(oprot);
        return;
      case GET_JOBS_RESULT:
        GetJobsResult getJobsResult = (GetJobsResult)value_;
        getJobsResult.write(oprot);
        return;
      case GET_QUOTA_RESULT:
        GetQuotaResult getQuotaResult = (GetQuotaResult)value_;
        getQuotaResult.write(oprot);
        return;
      case LIST_BACKUPS_RESULT:
        ListBackupsResult listBackupsResult = (ListBackupsResult)value_;
        listBackupsResult.write(oprot);
        return;
      case START_MAINTENANCE_RESULT:
        StartMaintenanceResult startMaintenanceResult = (StartMaintenanceResult)value_;
        startMaintenanceResult.write(oprot);
        return;
      case DRAIN_HOSTS_RESULT:
        DrainHostsResult drainHostsResult = (DrainHostsResult)value_;
        drainHostsResult.write(oprot);
        return;
      case QUERY_RECOVERY_RESULT:
        QueryRecoveryResult queryRecoveryResult = (QueryRecoveryResult)value_;
        queryRecoveryResult.write(oprot);
        return;
      case MAINTENANCE_STATUS_RESULT:
        MaintenanceStatusResult maintenanceStatusResult = (MaintenanceStatusResult)value_;
        maintenanceStatusResult.write(oprot);
        return;
      case END_MAINTENANCE_RESULT:
        EndMaintenanceResult endMaintenanceResult = (EndMaintenanceResult)value_;
        endMaintenanceResult.write(oprot);
        return;
      case ROLE_SUMMARY_RESULT:
        RoleSummaryResult roleSummaryResult = (RoleSummaryResult)value_;
        roleSummaryResult.write(oprot);
        return;
      case JOB_SUMMARY_RESULT:
        JobSummaryResult jobSummaryResult = (JobSummaryResult)value_;
        jobSummaryResult.write(oprot);
        return;
      case CONFIG_SUMMARY_RESULT:
        ConfigSummaryResult configSummaryResult = (ConfigSummaryResult)value_;
        configSummaryResult.write(oprot);
        return;
      case GET_PENDING_REASON_RESULT:
        GetPendingReasonResult getPendingReasonResult = (GetPendingReasonResult)value_;
        getPendingReasonResult.write(oprot);
        return;
      case START_JOB_UPDATE_RESULT:
        StartJobUpdateResult startJobUpdateResult = (StartJobUpdateResult)value_;
        startJobUpdateResult.write(oprot);
        return;
      case GET_JOB_UPDATE_SUMMARIES_RESULT:
        GetJobUpdateSummariesResult getJobUpdateSummariesResult = (GetJobUpdateSummariesResult)value_;
        getJobUpdateSummariesResult.write(oprot);
        return;
      case GET_JOB_UPDATE_DETAILS_RESULT:
        GetJobUpdateDetailsResult getJobUpdateDetailsResult = (GetJobUpdateDetailsResult)value_;
        getJobUpdateDetailsResult.write(oprot);
        return;
      case PULSE_JOB_UPDATE_RESULT:
        PulseJobUpdateResult pulseJobUpdateResult = (PulseJobUpdateResult)value_;
        pulseJobUpdateResult.write(oprot);
        return;
      case GET_JOB_UPDATE_DIFF_RESULT:
        GetJobUpdateDiffResult getJobUpdateDiffResult = (GetJobUpdateDiffResult)value_;
        getJobUpdateDiffResult.write(oprot);
        return;
      case GET_TIER_CONFIG_RESULT:
        GetTierConfigResult getTierConfigResult = (GetTierConfigResult)value_;
        getTierConfigResult.write(oprot);
        return;
      default:
        throw new IllegalStateException("Cannot write union with unknown field " + setField_);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TField getFieldDesc(_Fields setField) {
    switch (setField) {
      case POPULATE_JOB_RESULT:
        return POPULATE_JOB_RESULT_FIELD_DESC;
      case SCHEDULE_STATUS_RESULT:
        return SCHEDULE_STATUS_RESULT_FIELD_DESC;
      case GET_JOBS_RESULT:
        return GET_JOBS_RESULT_FIELD_DESC;
      case GET_QUOTA_RESULT:
        return GET_QUOTA_RESULT_FIELD_DESC;
      case LIST_BACKUPS_RESULT:
        return LIST_BACKUPS_RESULT_FIELD_DESC;
      case START_MAINTENANCE_RESULT:
        return START_MAINTENANCE_RESULT_FIELD_DESC;
      case DRAIN_HOSTS_RESULT:
        return DRAIN_HOSTS_RESULT_FIELD_DESC;
      case QUERY_RECOVERY_RESULT:
        return QUERY_RECOVERY_RESULT_FIELD_DESC;
      case MAINTENANCE_STATUS_RESULT:
        return MAINTENANCE_STATUS_RESULT_FIELD_DESC;
      case END_MAINTENANCE_RESULT:
        return END_MAINTENANCE_RESULT_FIELD_DESC;
      case ROLE_SUMMARY_RESULT:
        return ROLE_SUMMARY_RESULT_FIELD_DESC;
      case JOB_SUMMARY_RESULT:
        return JOB_SUMMARY_RESULT_FIELD_DESC;
      case CONFIG_SUMMARY_RESULT:
        return CONFIG_SUMMARY_RESULT_FIELD_DESC;
      case GET_PENDING_REASON_RESULT:
        return GET_PENDING_REASON_RESULT_FIELD_DESC;
      case START_JOB_UPDATE_RESULT:
        return START_JOB_UPDATE_RESULT_FIELD_DESC;
      case GET_JOB_UPDATE_SUMMARIES_RESULT:
        return GET_JOB_UPDATE_SUMMARIES_RESULT_FIELD_DESC;
      case GET_JOB_UPDATE_DETAILS_RESULT:
        return GET_JOB_UPDATE_DETAILS_RESULT_FIELD_DESC;
      case PULSE_JOB_UPDATE_RESULT:
        return PULSE_JOB_UPDATE_RESULT_FIELD_DESC;
      case GET_JOB_UPDATE_DIFF_RESULT:
        return GET_JOB_UPDATE_DIFF_RESULT_FIELD_DESC;
      case GET_TIER_CONFIG_RESULT:
        return GET_TIER_CONFIG_RESULT_FIELD_DESC;
      default:
        throw new IllegalArgumentException("Unknown field id " + setField);
    }
  }

  @Override
  protected org.apache.thrift.protocol.TStruct getStructDesc() {
    return STRUCT_DESC;
  }

  @Override
  protected _Fields enumForId(short id) {
    return _Fields.findByThriftIdOrThrow(id);
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }


  public PopulateJobResult getPopulateJobResult() {
    if (getSetField() == _Fields.POPULATE_JOB_RESULT) {
      return (PopulateJobResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'populateJobResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setPopulateJobResult(PopulateJobResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.POPULATE_JOB_RESULT;
    value_ = value;
  }

  public ScheduleStatusResult getScheduleStatusResult() {
    if (getSetField() == _Fields.SCHEDULE_STATUS_RESULT) {
      return (ScheduleStatusResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'scheduleStatusResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setScheduleStatusResult(ScheduleStatusResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.SCHEDULE_STATUS_RESULT;
    value_ = value;
  }

  public GetJobsResult getGetJobsResult() {
    if (getSetField() == _Fields.GET_JOBS_RESULT) {
      return (GetJobsResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'getJobsResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setGetJobsResult(GetJobsResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.GET_JOBS_RESULT;
    value_ = value;
  }

  public GetQuotaResult getGetQuotaResult() {
    if (getSetField() == _Fields.GET_QUOTA_RESULT) {
      return (GetQuotaResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'getQuotaResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setGetQuotaResult(GetQuotaResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.GET_QUOTA_RESULT;
    value_ = value;
  }

  public ListBackupsResult getListBackupsResult() {
    if (getSetField() == _Fields.LIST_BACKUPS_RESULT) {
      return (ListBackupsResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'listBackupsResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setListBackupsResult(ListBackupsResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.LIST_BACKUPS_RESULT;
    value_ = value;
  }

  public StartMaintenanceResult getStartMaintenanceResult() {
    if (getSetField() == _Fields.START_MAINTENANCE_RESULT) {
      return (StartMaintenanceResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'startMaintenanceResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setStartMaintenanceResult(StartMaintenanceResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.START_MAINTENANCE_RESULT;
    value_ = value;
  }

  public DrainHostsResult getDrainHostsResult() {
    if (getSetField() == _Fields.DRAIN_HOSTS_RESULT) {
      return (DrainHostsResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'drainHostsResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setDrainHostsResult(DrainHostsResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.DRAIN_HOSTS_RESULT;
    value_ = value;
  }

  public QueryRecoveryResult getQueryRecoveryResult() {
    if (getSetField() == _Fields.QUERY_RECOVERY_RESULT) {
      return (QueryRecoveryResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'queryRecoveryResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setQueryRecoveryResult(QueryRecoveryResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.QUERY_RECOVERY_RESULT;
    value_ = value;
  }

  public MaintenanceStatusResult getMaintenanceStatusResult() {
    if (getSetField() == _Fields.MAINTENANCE_STATUS_RESULT) {
      return (MaintenanceStatusResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'maintenanceStatusResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setMaintenanceStatusResult(MaintenanceStatusResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.MAINTENANCE_STATUS_RESULT;
    value_ = value;
  }

  public EndMaintenanceResult getEndMaintenanceResult() {
    if (getSetField() == _Fields.END_MAINTENANCE_RESULT) {
      return (EndMaintenanceResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'endMaintenanceResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setEndMaintenanceResult(EndMaintenanceResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.END_MAINTENANCE_RESULT;
    value_ = value;
  }

  public RoleSummaryResult getRoleSummaryResult() {
    if (getSetField() == _Fields.ROLE_SUMMARY_RESULT) {
      return (RoleSummaryResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'roleSummaryResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setRoleSummaryResult(RoleSummaryResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.ROLE_SUMMARY_RESULT;
    value_ = value;
  }

  public JobSummaryResult getJobSummaryResult() {
    if (getSetField() == _Fields.JOB_SUMMARY_RESULT) {
      return (JobSummaryResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'jobSummaryResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setJobSummaryResult(JobSummaryResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.JOB_SUMMARY_RESULT;
    value_ = value;
  }

  public ConfigSummaryResult getConfigSummaryResult() {
    if (getSetField() == _Fields.CONFIG_SUMMARY_RESULT) {
      return (ConfigSummaryResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'configSummaryResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setConfigSummaryResult(ConfigSummaryResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.CONFIG_SUMMARY_RESULT;
    value_ = value;
  }

  public GetPendingReasonResult getGetPendingReasonResult() {
    if (getSetField() == _Fields.GET_PENDING_REASON_RESULT) {
      return (GetPendingReasonResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'getPendingReasonResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setGetPendingReasonResult(GetPendingReasonResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.GET_PENDING_REASON_RESULT;
    value_ = value;
  }

  public StartJobUpdateResult getStartJobUpdateResult() {
    if (getSetField() == _Fields.START_JOB_UPDATE_RESULT) {
      return (StartJobUpdateResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'startJobUpdateResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setStartJobUpdateResult(StartJobUpdateResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.START_JOB_UPDATE_RESULT;
    value_ = value;
  }

  public GetJobUpdateSummariesResult getGetJobUpdateSummariesResult() {
    if (getSetField() == _Fields.GET_JOB_UPDATE_SUMMARIES_RESULT) {
      return (GetJobUpdateSummariesResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'getJobUpdateSummariesResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setGetJobUpdateSummariesResult(GetJobUpdateSummariesResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.GET_JOB_UPDATE_SUMMARIES_RESULT;
    value_ = value;
  }

  public GetJobUpdateDetailsResult getGetJobUpdateDetailsResult() {
    if (getSetField() == _Fields.GET_JOB_UPDATE_DETAILS_RESULT) {
      return (GetJobUpdateDetailsResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'getJobUpdateDetailsResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setGetJobUpdateDetailsResult(GetJobUpdateDetailsResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.GET_JOB_UPDATE_DETAILS_RESULT;
    value_ = value;
  }

  public PulseJobUpdateResult getPulseJobUpdateResult() {
    if (getSetField() == _Fields.PULSE_JOB_UPDATE_RESULT) {
      return (PulseJobUpdateResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'pulseJobUpdateResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setPulseJobUpdateResult(PulseJobUpdateResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.PULSE_JOB_UPDATE_RESULT;
    value_ = value;
  }

  public GetJobUpdateDiffResult getGetJobUpdateDiffResult() {
    if (getSetField() == _Fields.GET_JOB_UPDATE_DIFF_RESULT) {
      return (GetJobUpdateDiffResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'getJobUpdateDiffResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setGetJobUpdateDiffResult(GetJobUpdateDiffResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.GET_JOB_UPDATE_DIFF_RESULT;
    value_ = value;
  }

  public GetTierConfigResult getGetTierConfigResult() {
    if (getSetField() == _Fields.GET_TIER_CONFIG_RESULT) {
      return (GetTierConfigResult)getFieldValue();
    } else {
      throw new RuntimeException("Cannot get field 'getTierConfigResult' because union is currently set to " + getFieldDesc(getSetField()).name);
    }
  }

  public void setGetTierConfigResult(GetTierConfigResult value) {
    if (value == null) throw new NullPointerException();
    setField_ = _Fields.GET_TIER_CONFIG_RESULT;
    value_ = value;
  }

  public boolean isSetPopulateJobResult() {
    return setField_ == _Fields.POPULATE_JOB_RESULT;
  }


  public boolean isSetScheduleStatusResult() {
    return setField_ == _Fields.SCHEDULE_STATUS_RESULT;
  }


  public boolean isSetGetJobsResult() {
    return setField_ == _Fields.GET_JOBS_RESULT;
  }


  public boolean isSetGetQuotaResult() {
    return setField_ == _Fields.GET_QUOTA_RESULT;
  }


  public boolean isSetListBackupsResult() {
    return setField_ == _Fields.LIST_BACKUPS_RESULT;
  }


  public boolean isSetStartMaintenanceResult() {
    return setField_ == _Fields.START_MAINTENANCE_RESULT;
  }


  public boolean isSetDrainHostsResult() {
    return setField_ == _Fields.DRAIN_HOSTS_RESULT;
  }


  public boolean isSetQueryRecoveryResult() {
    return setField_ == _Fields.QUERY_RECOVERY_RESULT;
  }


  public boolean isSetMaintenanceStatusResult() {
    return setField_ == _Fields.MAINTENANCE_STATUS_RESULT;
  }


  public boolean isSetEndMaintenanceResult() {
    return setField_ == _Fields.END_MAINTENANCE_RESULT;
  }


  public boolean isSetRoleSummaryResult() {
    return setField_ == _Fields.ROLE_SUMMARY_RESULT;
  }


  public boolean isSetJobSummaryResult() {
    return setField_ == _Fields.JOB_SUMMARY_RESULT;
  }


  public boolean isSetConfigSummaryResult() {
    return setField_ == _Fields.CONFIG_SUMMARY_RESULT;
  }


  public boolean isSetGetPendingReasonResult() {
    return setField_ == _Fields.GET_PENDING_REASON_RESULT;
  }


  public boolean isSetStartJobUpdateResult() {
    return setField_ == _Fields.START_JOB_UPDATE_RESULT;
  }


  public boolean isSetGetJobUpdateSummariesResult() {
    return setField_ == _Fields.GET_JOB_UPDATE_SUMMARIES_RESULT;
  }


  public boolean isSetGetJobUpdateDetailsResult() {
    return setField_ == _Fields.GET_JOB_UPDATE_DETAILS_RESULT;
  }


  public boolean isSetPulseJobUpdateResult() {
    return setField_ == _Fields.PULSE_JOB_UPDATE_RESULT;
  }


  public boolean isSetGetJobUpdateDiffResult() {
    return setField_ == _Fields.GET_JOB_UPDATE_DIFF_RESULT;
  }


  public boolean isSetGetTierConfigResult() {
    return setField_ == _Fields.GET_TIER_CONFIG_RESULT;
  }


  public boolean equals(Object other) {
    if (other instanceof Result) {
      return equals((Result)other);
    } else {
      return false;
    }
  }

  public boolean equals(Result other) {
    return other != null && getSetField() == other.getSetField() && getFieldValue().equals(other.getFieldValue());
  }

  @Override
  public int compareTo(Result other) {
    int lastComparison = org.apache.thrift.TBaseHelper.compareTo(getSetField(), other.getSetField());
    if (lastComparison == 0) {
      return org.apache.thrift.TBaseHelper.compareTo(getFieldValue(), other.getFieldValue());
    }
    return lastComparison;
  }


  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();
    list.add(this.getClass().getName());
    org.apache.thrift.TFieldIdEnum setField = getSetField();
    if (setField != null) {
      list.add(setField.getThriftFieldId());
      Object value = getFieldValue();
      if (value instanceof org.apache.thrift.TEnum) {
        list.add(((org.apache.thrift.TEnum)getFieldValue()).getValue());
      } else {
        list.add(value);
      }
    }
    return list.hashCode();
  }
  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }


}
