/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.airavata.sharing.registry.models;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

/**
 * <p>Different search operators that can be used with the entity search fields</p>
 * <li>EQUAL : Simply matches for equality. Applicable for name, and parent entity id</li>
 * <li>LIKE : Check for the condition %$FIELD% condition. Applicable for name, and description</li>
 * <li>FULL_TEXT : Does a full text search. Only applicable for the FULL_TEXT field.</li>
 * <li>GTE : Greater than or equal. Only applicable for created time, updated time and shared count.</li>
 * <li>LTE : Less than or equal. Only applicable for created time, updated time and shared count.</li>
 * 
 */
public enum SearchCondition implements org.apache.thrift.TEnum {
  EQUAL(0),
  LIKE(1),
  FULL_TEXT(2),
  GTE(3),
  LTE(4),
  NOT(5);

  private final int value;

  private SearchCondition(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static SearchCondition findByValue(int value) { 
    switch (value) {
      case 0:
        return EQUAL;
      case 1:
        return LIKE;
      case 2:
        return FULL_TEXT;
      case 3:
        return GTE;
      case 4:
        return LTE;
      case 5:
        return NOT;
      default:
        return null;
    }
  }
}
