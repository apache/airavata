/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.airavata.experiment.execution;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SecuritySettings implements org.apache.thrift.TBase<SecuritySettings, SecuritySettings._Fields>, java.io.Serializable, Cloneable, Comparable<SecuritySettings> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SecuritySettings");

  private static final org.apache.thrift.protocol.TField AMAZON_WSSETTINGS_FIELD_DESC = new org.apache.thrift.protocol.TField("amazonWSSettings", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField CREDENTIAL_STORE_SETTINGS_FIELD_DESC = new org.apache.thrift.protocol.TField("credentialStoreSettings", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField MYPROXY_SETTINGS_FIELD_DESC = new org.apache.thrift.protocol.TField("myproxySettings", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField SSH_AUTH_SETTINGS_FIELD_DESC = new org.apache.thrift.protocol.TField("sshAuthSettings", org.apache.thrift.protocol.TType.STRUCT, (short)4);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SecuritySettingsStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SecuritySettingsTupleSchemeFactory());
  }

  public AmazonWebServicesSettings amazonWSSettings; // required
  public CredentialStoreSecuritySettings credentialStoreSettings; // required
  public MyProxyRepositorySettings myproxySettings; // required
  public SSHAuthenticationSettings sshAuthSettings; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AMAZON_WSSETTINGS((short)1, "amazonWSSettings"),
    CREDENTIAL_STORE_SETTINGS((short)2, "credentialStoreSettings"),
    MYPROXY_SETTINGS((short)3, "myproxySettings"),
    SSH_AUTH_SETTINGS((short)4, "sshAuthSettings");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AMAZON_WSSETTINGS
          return AMAZON_WSSETTINGS;
        case 2: // CREDENTIAL_STORE_SETTINGS
          return CREDENTIAL_STORE_SETTINGS;
        case 3: // MYPROXY_SETTINGS
          return MYPROXY_SETTINGS;
        case 4: // SSH_AUTH_SETTINGS
          return SSH_AUTH_SETTINGS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AMAZON_WSSETTINGS, new org.apache.thrift.meta_data.FieldMetaData("amazonWSSettings", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AmazonWebServicesSettings.class)));
    tmpMap.put(_Fields.CREDENTIAL_STORE_SETTINGS, new org.apache.thrift.meta_data.FieldMetaData("credentialStoreSettings", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CredentialStoreSecuritySettings.class)));
    tmpMap.put(_Fields.MYPROXY_SETTINGS, new org.apache.thrift.meta_data.FieldMetaData("myproxySettings", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MyProxyRepositorySettings.class)));
    tmpMap.put(_Fields.SSH_AUTH_SETTINGS, new org.apache.thrift.meta_data.FieldMetaData("sshAuthSettings", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SSHAuthenticationSettings.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SecuritySettings.class, metaDataMap);
  }

  public SecuritySettings() {
  }

  public SecuritySettings(
    AmazonWebServicesSettings amazonWSSettings,
    CredentialStoreSecuritySettings credentialStoreSettings,
    MyProxyRepositorySettings myproxySettings,
    SSHAuthenticationSettings sshAuthSettings)
  {
    this();
    this.amazonWSSettings = amazonWSSettings;
    this.credentialStoreSettings = credentialStoreSettings;
    this.myproxySettings = myproxySettings;
    this.sshAuthSettings = sshAuthSettings;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SecuritySettings(SecuritySettings other) {
    if (other.isSetAmazonWSSettings()) {
      this.amazonWSSettings = new AmazonWebServicesSettings(other.amazonWSSettings);
    }
    if (other.isSetCredentialStoreSettings()) {
      this.credentialStoreSettings = new CredentialStoreSecuritySettings(other.credentialStoreSettings);
    }
    if (other.isSetMyproxySettings()) {
      this.myproxySettings = new MyProxyRepositorySettings(other.myproxySettings);
    }
    if (other.isSetSshAuthSettings()) {
      this.sshAuthSettings = new SSHAuthenticationSettings(other.sshAuthSettings);
    }
  }

  public SecuritySettings deepCopy() {
    return new SecuritySettings(this);
  }

  @Override
  public void clear() {
    this.amazonWSSettings = null;
    this.credentialStoreSettings = null;
    this.myproxySettings = null;
    this.sshAuthSettings = null;
  }

  public AmazonWebServicesSettings getAmazonWSSettings() {
    return this.amazonWSSettings;
  }

  public SecuritySettings setAmazonWSSettings(AmazonWebServicesSettings amazonWSSettings) {
    this.amazonWSSettings = amazonWSSettings;
    return this;
  }

  public void unsetAmazonWSSettings() {
    this.amazonWSSettings = null;
  }

  /** Returns true if field amazonWSSettings is set (has been assigned a value) and false otherwise */
  public boolean isSetAmazonWSSettings() {
    return this.amazonWSSettings != null;
  }

  public void setAmazonWSSettingsIsSet(boolean value) {
    if (!value) {
      this.amazonWSSettings = null;
    }
  }

  public CredentialStoreSecuritySettings getCredentialStoreSettings() {
    return this.credentialStoreSettings;
  }

  public SecuritySettings setCredentialStoreSettings(CredentialStoreSecuritySettings credentialStoreSettings) {
    this.credentialStoreSettings = credentialStoreSettings;
    return this;
  }

  public void unsetCredentialStoreSettings() {
    this.credentialStoreSettings = null;
  }

  /** Returns true if field credentialStoreSettings is set (has been assigned a value) and false otherwise */
  public boolean isSetCredentialStoreSettings() {
    return this.credentialStoreSettings != null;
  }

  public void setCredentialStoreSettingsIsSet(boolean value) {
    if (!value) {
      this.credentialStoreSettings = null;
    }
  }

  public MyProxyRepositorySettings getMyproxySettings() {
    return this.myproxySettings;
  }

  public SecuritySettings setMyproxySettings(MyProxyRepositorySettings myproxySettings) {
    this.myproxySettings = myproxySettings;
    return this;
  }

  public void unsetMyproxySettings() {
    this.myproxySettings = null;
  }

  /** Returns true if field myproxySettings is set (has been assigned a value) and false otherwise */
  public boolean isSetMyproxySettings() {
    return this.myproxySettings != null;
  }

  public void setMyproxySettingsIsSet(boolean value) {
    if (!value) {
      this.myproxySettings = null;
    }
  }

  public SSHAuthenticationSettings getSshAuthSettings() {
    return this.sshAuthSettings;
  }

  public SecuritySettings setSshAuthSettings(SSHAuthenticationSettings sshAuthSettings) {
    this.sshAuthSettings = sshAuthSettings;
    return this;
  }

  public void unsetSshAuthSettings() {
    this.sshAuthSettings = null;
  }

  /** Returns true if field sshAuthSettings is set (has been assigned a value) and false otherwise */
  public boolean isSetSshAuthSettings() {
    return this.sshAuthSettings != null;
  }

  public void setSshAuthSettingsIsSet(boolean value) {
    if (!value) {
      this.sshAuthSettings = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AMAZON_WSSETTINGS:
      if (value == null) {
        unsetAmazonWSSettings();
      } else {
        setAmazonWSSettings((AmazonWebServicesSettings)value);
      }
      break;

    case CREDENTIAL_STORE_SETTINGS:
      if (value == null) {
        unsetCredentialStoreSettings();
      } else {
        setCredentialStoreSettings((CredentialStoreSecuritySettings)value);
      }
      break;

    case MYPROXY_SETTINGS:
      if (value == null) {
        unsetMyproxySettings();
      } else {
        setMyproxySettings((MyProxyRepositorySettings)value);
      }
      break;

    case SSH_AUTH_SETTINGS:
      if (value == null) {
        unsetSshAuthSettings();
      } else {
        setSshAuthSettings((SSHAuthenticationSettings)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AMAZON_WSSETTINGS:
      return getAmazonWSSettings();

    case CREDENTIAL_STORE_SETTINGS:
      return getCredentialStoreSettings();

    case MYPROXY_SETTINGS:
      return getMyproxySettings();

    case SSH_AUTH_SETTINGS:
      return getSshAuthSettings();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AMAZON_WSSETTINGS:
      return isSetAmazonWSSettings();
    case CREDENTIAL_STORE_SETTINGS:
      return isSetCredentialStoreSettings();
    case MYPROXY_SETTINGS:
      return isSetMyproxySettings();
    case SSH_AUTH_SETTINGS:
      return isSetSshAuthSettings();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SecuritySettings)
      return this.equals((SecuritySettings)that);
    return false;
  }

  public boolean equals(SecuritySettings that) {
    if (that == null)
      return false;

    boolean this_present_amazonWSSettings = true && this.isSetAmazonWSSettings();
    boolean that_present_amazonWSSettings = true && that.isSetAmazonWSSettings();
    if (this_present_amazonWSSettings || that_present_amazonWSSettings) {
      if (!(this_present_amazonWSSettings && that_present_amazonWSSettings))
        return false;
      if (!this.amazonWSSettings.equals(that.amazonWSSettings))
        return false;
    }

    boolean this_present_credentialStoreSettings = true && this.isSetCredentialStoreSettings();
    boolean that_present_credentialStoreSettings = true && that.isSetCredentialStoreSettings();
    if (this_present_credentialStoreSettings || that_present_credentialStoreSettings) {
      if (!(this_present_credentialStoreSettings && that_present_credentialStoreSettings))
        return false;
      if (!this.credentialStoreSettings.equals(that.credentialStoreSettings))
        return false;
    }

    boolean this_present_myproxySettings = true && this.isSetMyproxySettings();
    boolean that_present_myproxySettings = true && that.isSetMyproxySettings();
    if (this_present_myproxySettings || that_present_myproxySettings) {
      if (!(this_present_myproxySettings && that_present_myproxySettings))
        return false;
      if (!this.myproxySettings.equals(that.myproxySettings))
        return false;
    }

    boolean this_present_sshAuthSettings = true && this.isSetSshAuthSettings();
    boolean that_present_sshAuthSettings = true && that.isSetSshAuthSettings();
    if (this_present_sshAuthSettings || that_present_sshAuthSettings) {
      if (!(this_present_sshAuthSettings && that_present_sshAuthSettings))
        return false;
      if (!this.sshAuthSettings.equals(that.sshAuthSettings))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(SecuritySettings other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAmazonWSSettings()).compareTo(other.isSetAmazonWSSettings());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAmazonWSSettings()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.amazonWSSettings, other.amazonWSSettings);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCredentialStoreSettings()).compareTo(other.isSetCredentialStoreSettings());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCredentialStoreSettings()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.credentialStoreSettings, other.credentialStoreSettings);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMyproxySettings()).compareTo(other.isSetMyproxySettings());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMyproxySettings()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.myproxySettings, other.myproxySettings);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSshAuthSettings()).compareTo(other.isSetSshAuthSettings());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSshAuthSettings()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sshAuthSettings, other.sshAuthSettings);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SecuritySettings(");
    boolean first = true;

    sb.append("amazonWSSettings:");
    if (this.amazonWSSettings == null) {
      sb.append("null");
    } else {
      sb.append(this.amazonWSSettings);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("credentialStoreSettings:");
    if (this.credentialStoreSettings == null) {
      sb.append("null");
    } else {
      sb.append(this.credentialStoreSettings);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("myproxySettings:");
    if (this.myproxySettings == null) {
      sb.append("null");
    } else {
      sb.append(this.myproxySettings);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sshAuthSettings:");
    if (this.sshAuthSettings == null) {
      sb.append("null");
    } else {
      sb.append(this.sshAuthSettings);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (amazonWSSettings != null) {
      amazonWSSettings.validate();
    }
    if (credentialStoreSettings != null) {
      credentialStoreSettings.validate();
    }
    if (myproxySettings != null) {
      myproxySettings.validate();
    }
    if (sshAuthSettings != null) {
      sshAuthSettings.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SecuritySettingsStandardSchemeFactory implements SchemeFactory {
    public SecuritySettingsStandardScheme getScheme() {
      return new SecuritySettingsStandardScheme();
    }
  }

  private static class SecuritySettingsStandardScheme extends StandardScheme<SecuritySettings> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SecuritySettings struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AMAZON_WSSETTINGS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.amazonWSSettings = new AmazonWebServicesSettings();
              struct.amazonWSSettings.read(iprot);
              struct.setAmazonWSSettingsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CREDENTIAL_STORE_SETTINGS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.credentialStoreSettings = new CredentialStoreSecuritySettings();
              struct.credentialStoreSettings.read(iprot);
              struct.setCredentialStoreSettingsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MYPROXY_SETTINGS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.myproxySettings = new MyProxyRepositorySettings();
              struct.myproxySettings.read(iprot);
              struct.setMyproxySettingsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SSH_AUTH_SETTINGS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.sshAuthSettings = new SSHAuthenticationSettings();
              struct.sshAuthSettings.read(iprot);
              struct.setSshAuthSettingsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SecuritySettings struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.amazonWSSettings != null) {
        oprot.writeFieldBegin(AMAZON_WSSETTINGS_FIELD_DESC);
        struct.amazonWSSettings.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.credentialStoreSettings != null) {
        oprot.writeFieldBegin(CREDENTIAL_STORE_SETTINGS_FIELD_DESC);
        struct.credentialStoreSettings.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.myproxySettings != null) {
        oprot.writeFieldBegin(MYPROXY_SETTINGS_FIELD_DESC);
        struct.myproxySettings.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.sshAuthSettings != null) {
        oprot.writeFieldBegin(SSH_AUTH_SETTINGS_FIELD_DESC);
        struct.sshAuthSettings.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SecuritySettingsTupleSchemeFactory implements SchemeFactory {
    public SecuritySettingsTupleScheme getScheme() {
      return new SecuritySettingsTupleScheme();
    }
  }

  private static class SecuritySettingsTupleScheme extends TupleScheme<SecuritySettings> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SecuritySettings struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAmazonWSSettings()) {
        optionals.set(0);
      }
      if (struct.isSetCredentialStoreSettings()) {
        optionals.set(1);
      }
      if (struct.isSetMyproxySettings()) {
        optionals.set(2);
      }
      if (struct.isSetSshAuthSettings()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetAmazonWSSettings()) {
        struct.amazonWSSettings.write(oprot);
      }
      if (struct.isSetCredentialStoreSettings()) {
        struct.credentialStoreSettings.write(oprot);
      }
      if (struct.isSetMyproxySettings()) {
        struct.myproxySettings.write(oprot);
      }
      if (struct.isSetSshAuthSettings()) {
        struct.sshAuthSettings.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SecuritySettings struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.amazonWSSettings = new AmazonWebServicesSettings();
        struct.amazonWSSettings.read(iprot);
        struct.setAmazonWSSettingsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.credentialStoreSettings = new CredentialStoreSecuritySettings();
        struct.credentialStoreSettings.read(iprot);
        struct.setCredentialStoreSettingsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.myproxySettings = new MyProxyRepositorySettings();
        struct.myproxySettings.read(iprot);
        struct.setMyproxySettingsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.sshAuthSettings = new SSHAuthenticationSettings();
        struct.sshAuthSettings.read(iprot);
        struct.setSshAuthSettingsIsSet(true);
      }
    }
  }

}

