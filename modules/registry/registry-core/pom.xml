<?xml version="1.0" encoding="UTF-8"?>
<!--


    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache.airavata</groupId>
        <artifactId>registry</artifactId>
        <version>0.21-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>org.apache.airavata</groupId>
    <artifactId>airavata-registry-core</artifactId>

    <properties>
        <derby.version>10.11.1.1</derby.version>
        <surefire.version>2.18.1</surefire.version>
        <skipTests>false</skipTests>
        <mysql.connector.version>5.1.34</mysql.connector.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.airavata</groupId>
            <artifactId>airavata-data-models</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>${dozer.version}</version>
            <exclusions>
               <exclusion>
                   <groupId>org.slf4j</groupId>
                   <artifactId>slf4j-log4j12</artifactId>
               </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa</artifactId>
            <version>${openjpa.version}</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.connector.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>${derby.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>${derby.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbynet</artifactId>
            <version>${derby.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbytools</artifactId>
            <version>${derby.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.airavata</groupId>
            <artifactId>airavata-commons</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.airavata</groupId>
            <artifactId>airavata-server-configuration</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.airavata</groupId>
            <artifactId>airavata-registry-cpi</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ibatis</groupId>
            <artifactId>ibatis-sqlmap</artifactId>
            <version>2.3.0</version>
        </dependency>
        <!-- For MariaDB based schema migrations -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>2.0.2</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                   <release>11</release>
                    <!--<compilerArgs>-->
                        <!--<arg>&#45;&#45;add-opens=java.base/java.lang=ALL-UNNAMED</arg>-->
                    <!--</compilerArgs>-->
                    <!--<fork>true</fork>-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <executable>java</executable>
                    <classpathScope>runtime</classpathScope>
                    <workingDirectory>${project.build.directory}</workingDirectory>
                </configuration>
                <executions>
                    <execution>
                        <!-- Run with:
                            mvn process-classes docker-compose:up@mysql-up exec:exec@generate-migrations-mysql docker-compose:down@mysql-down
                        -->
                        <id>generate-migrations-mysql</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <arguments>
                                <argument>-Dairavata.config.dir=${project.basedir}/src/main/resources/migrations-util/mysql</argument>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>org.apache.airavata.registry.core.utils.migration.MigrationSchemaGenerator</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Run with:
                            mvn process-classes docker-compose:up@mysql-up exec:exec@generate-schema-mysql docker-compose:down@mysql-down
                        -->
                        <id>generate-schema-mysql</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <arguments>
                                <argument>-Dairavata.config.dir=${project.basedir}/src/main/resources/migrations-util/mysql</argument>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>org.apache.airavata.registry.core.utils.migration.MigrationSchemaGenerator</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Run with:
                            mvn process-classes exec:exec@generate-migrations-derby
                        -->
                        <id>generate-migrations-derby</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <arguments>
                                <argument>-Dairavata.config.dir=${project.basedir}/src/main/resources/migrations-util/derby</argument>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>org.apache.airavata.registry.core.utils.migration.MigrationSchemaGenerator</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Run with:
                            mvn process-classes exec:exec@generate-schema-derby
                        -->
                        <id>generate-schema-derby</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <arguments>
                                <argument>-Dairavata.config.dir=${project.basedir}/src/main/resources/migrations-util/derby</argument>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>org.apache.airavata.registry.core.utils.migration.MigrationSchemaGenerator</argument>
                                <argument>build</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.openjpa</groupId>
                <artifactId>openjpa-maven-plugin</artifactId>
                <version>${openjpa.version}</version>
                <configuration>
                    <includes>**/model/*.class</includes>
                    <addDefaultConstructor>true</addDefaultConstructor>
                    <enforcePropertyRestrictions>true</enforcePropertyRestrictions>
                </configuration>
                <executions>
                    <execution>
                        <id>enhancer</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.openjpa</groupId>
                        <artifactId>openjpa</artifactId>
                        <version>${openjpa.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <inherited>true</inherited>
                <configuration>
                    <failIfNoTests>false</failIfNoTests>
                    <skipTests>${skipTests}</skipTests>
                    <workingDirectory>${project.build.testOutputDirectory}</workingDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.dkanejs.maven.plugins</groupId>
                <artifactId>docker-compose-maven-plugin</artifactId>
                <version>4.0.0</version>
                <executions>
                    <execution>
                        <id>mysql-up</id>
                        <goals>
                            <goal>up</goal>
                        </goals>
                        <configuration>
                            <composeFile>${project.basedir}/src/main/resources/migrations-util/mysql/docker-compose.yml</composeFile>
                            <detachedMode>true</detachedMode>
                        </configuration>
                    </execution>
                    <execution>
                        <id>mysql-down</id>
                        <goals>
                            <goal>down</goal>
                        </goals>
                        <configuration>
                            <composeFile>${project.basedir}/src/main/resources/migrations-util/mysql/docker-compose.yml</composeFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            </plugins>
    </build>

</project>
