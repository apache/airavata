#
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

###########################################################################
#
#  This properties file provides configuration for all Airavata Services: 
#  Registry, Workflow Interpreter, GFac, Message Broker, Message Box
#
###########################################################################

###########################################################################
# Airavata Embedded-Tomcat Server Configuration
###########################################################################
# By default, tomcat runs on port 80. If the port is changed, it will be  
#  have to be specified with port properties. This will be picked up by 
#  the registry service to register the service end-points.

port=8080

# Axis2 server automatically picks up IP address from axis configuration, 
#  but some DHCP enables machines do not report correct ip addresses,  
#  in which case, the IP address can be manually specified. 

ip=192.2.33.12


#This property will enable https and stops http, during the url registration, https urls will be stored and
# http urls will not get registered, because currently airavata supports only one url for each service
#enable.https=false

###########################################################################
# Airavata Registry Configuration
###########################################################################
system.gateway=default
system.user=admin
system.password=admin
#for derby [AiravataJPARegistry]
registry.jdbc.driver=org.apache.derby.jdbc.ClientDriver
registry.jdbc.url=jdbc:derby://localhost:1527/persistent_data;create=true;user=airavata;password=airavata
# MySql database configuration
#registry.jdbc.driver=com.mysql.jdbc.Driver
#registry.jdbc.url=jdbc:mysql://localhost:3306/persistent_data
registry.jdbc.user=airavata
registry.jdbc.password=airavata
start.derby.server.mode=true
default.registry.user=admin
default.registry.password=admin
default.registry.password.hash.method=SHA
default.registry.gateway=default
validationQuery=SELECT 1 from Configuration
jpa.connection.properties=MaxActive=10,MaxIdle=5,MinIdle=2,MaxWait=60000,testWhileIdle=true,testOnBorrow=true
#for rest [RegistryClient]
#registry.jdbc.url=http://localhost:9080/airavata-services

#user defined registry accessor classes
#class.provenance.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.configuration.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.descriptor.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.project.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.user.workflow.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.published.workflow.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry

###########################################################################
# Airavata Workflow Interpreter Configurations
###########################################################################

runInThread=true
provenance=true
provenanceWriterThreadPoolSize=20
gfac.embedded=true

#
# Security Configuration used by Airavata Generic Factory Service
#  to interact with Computational Resources.
#

###########################################################################
# Airavata GFac MyProxy GSI credentials to access Grid Resources.
###########################################################################

myproxy.server=myproxy.teragrid.org
myproxy.user=username
myproxy.pass=password
myproxy.life=3600
# XSEDE Trusted certificates can be downloaded from https://software.xsede.org/security/xsede-certs.tar.gz
trusted.cert.location=/path/to/trusted/certificates

# SSH PKI key pair is SSH based authentication is used.
#ssh.key=/home/user/.ssh/id_rsa
#ssh.keypass=
#ssh.username=usernameAtHost

###########################################################################
# Airavata Message Broker Basic Configurations.
#  the Advanced section provides detailed custom configuration properties.
###########################################################################

# Default derby database configuration
broker.jdbc.driver=org.apache.derby.jdbc.EmbeddedDriver
broker.jdbc.url=jdbc:derby:wsmg;create=true;user=airavata;password=airavata

# Note: This database will only be used  if 'broker.storage.type=persistent' 
#       is set in advanced properties below.
# MySql database configuration
#broker.jdbc.driver=com.mysql.jdbc.Driver
#broker.jdbc.url=jdbc:mysql://localhost:3306/wsmg?user=airavata&password=airavata

###########################################################################
# Airavata Message Box Basic Configurations, 
#  the Advanced section provides detailed custom configuration properties.
###########################################################################  

# Default derby database
msgBox.jdbc.driver=org.apache.derby.jdbc.EmbeddedDriver
msgBox.jdbc.url=jdbc:derby:wsmg;create=true;user=airavata;password=airavata

# MySql database configuration
#msgBox.jdbc.driver=com.mysql.jdbc.Driver
#msgBox.jdbc.url=jdbc:mysql://localhost:3306/wsmg?user=airavata&password=airavata

###########################################################################
# Advance configuration to change service implementations
###########################################################################

#Update the server context root path if airavata server is deployed under a different context root other than axis2
server.context-root=airavata-server

#
# Class which implemented HostScheduler interface. It will determine the which host to submit the request
#
host.scheduler=org.apache.airavata.gfac.scheduler.impl.SimpleHostScheduler

#
# Data Service Plugins classes
#
datachain.classes= org.apache.airavata.core.gfac.extension.data.RegistryDataService

#
# Pre execution Plugins classes. For example, GridFTP Input Staging
#
prechain.classes= org.apache.airavata.core.gfac.extension.pre.GridFtpInputStaging
prechain.classes= org.apache.airavata.core.gfac.extension.pre.HttpInputStaging

#
# Post execution Plugins classes. For example, GridFTP Output Staging
#
postchain.classes= org.apache.airavata.core.gfac.extension.post.GridFtpOutputStaging
postchain.classes= org.apache.airavata.core.gfac.extension.post.OutputRegister

#
# Advanced Message Broker Configurations
#

#socket time out in milliseconds for sending messages. (defaults is 20000)
broker.socket.timeout=60000

broker.storage.type=persistent
#broker.storage.type=memory

#specifies wether delivery component should be started or not.
broker.start.delivery.thread=true

#fixed thread pool based delivery
#broker.delivery.method=pcrew

#dynamic thread pool based delivery
#broker.delivery.method=parallel

#single thread delivery
broker.delivery.method=serial

#number of message delivery failures before a url become black listed (default is 2)
#broker.msg.delivery.retries=2

#time period (in seconds) a url will be kept blacklisted (default is 5 seconds) 
#consumer.expiration.time.gap=5 

#maximum number of messages to be send to a one consumer/url at time. 
#applicable if 'broker.delivery.method' is 'pcrew' . (default is 10)

#sending.batch.size=10

#size of the thread pool. only applicable if 'broker.delivery.method' is 'pcrew'. (default is 4)
#sending.thread.pool.size=4

#
# Advanced Message Box Configurations
# 
msgBox.usedatabase=true
messagePreservationDays=2
messagePreservationHours=0
messagePreservationMinutes=0
messagePerservationIntervalDays=0
messagePerservationIntervalHours=1
messagePerservationIntervalMinutes=0

###---------------------------REGISTRY API IMPLEMENTATION---------------------------###

class.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
#class.registry.accessor=org.apache.airavata.rest.client.RegistryClient

###---------------------------Computational Middleware Configurations---------------------------###

#enable.application.job.status.history=true
registry.service.wsdl=http://${ip}:${port}/${server.context-root}/services/RegistryService?wsdl
registry.service.wsdl2=http://localhost:${port}/${server.context-root}/services/RegistryService?wsdl
