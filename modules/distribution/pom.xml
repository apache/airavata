<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>org.apache.airavata</groupId>
    <artifactId>airavata</artifactId>
    <version>0.21-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>apache-airavata-distribution</artifactId>
  <name>Airavata Distribution</name>
  <packaging>pom</packaging>

  <dependencies>
    <!-- Core Airavata API - this will transitively include most dependencies -->
    <dependency>
      <groupId>org.apache.airavata</groupId>
      <artifactId>airavata-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    
    <!-- Additional dependencies that may be needed for specific components -->
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>

  <url>http://airavata.apache.org/</url>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>api-server-distribution-package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>${api.server.dist.name}</finalName>
              <descriptors>
                <descriptor>src/main/assembly/api-server-bin-assembly.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
          <execution>
            <id>controller-distribution-package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>${controller.dist.name}</finalName>
              <descriptors>
                <descriptor>src/main/assembly/controller-bin-assembly.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
          <execution>
            <id>participant-distribution-package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>${participant.dist.name}</finalName>
              <descriptors>
                <descriptor>src/main/assembly/participant-bin-assembly.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
          <execution>
            <id>pre-wm-distribution-package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>${pre.wm.dist.name}</finalName>
              <descriptors>
                <descriptor>src/main/assembly/pre-wm-bin-assembly.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
          <execution>
            <id>post-wm-distribution-package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>${post.wm.dist.name}</finalName>
              <descriptors>
                <descriptor>src/main/assembly/post-wm-bin-assembly.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
          <execution>
            <id>parser-wm-distribution-package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>${parser.wm.dist.name}</finalName>
              <descriptors>
                <descriptor>src/main/assembly/parser-wm-bin-assembly.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
          <execution>
            <id>email-monitor-distribution-package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>${email.monitor.dist.name}</finalName>
              <descriptors>
                <descriptor>src/main/assembly/email-monitor-bin-assembly.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
          <execution>
            <id>realtime-monitor-distribution-package</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <tarLongFileMode>posix</tarLongFileMode>
              <finalName>${realtime.monitor.dist.name}</finalName>
              <descriptors>
                <descriptor>src/main/assembly/realtime-monitor-bin-assembly.xml</descriptor>
              </descriptors>
              <attach>false</attach>
            </configuration>
          </execution>
          <execution>
            <id>sharing-registry-distribution-package</id>
            <phase>package</phase>
            <goals>
                <goal>single</goal>
            </goals>
            <configuration>
                <tarLongFileMode>posix</tarLongFileMode>
                <finalName>${sharing.registry.dist.name}</finalName>
                <descriptors>
                    <descriptor>src/main/assembly/sharing-registry-bin-assembly.xml</descriptor>
                </descriptors>
                <attach>false</attach>
            </configuration>
        </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-api-server-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docker.api.server.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${docker.api.server.image.src.root}</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${session.executionRootDirectory}/distribution</directory>
                  <includes>
                    <include>${api.server.dist.name}.tar.gz</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-controller-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docker.controller.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${docker.controller.image.src.root}</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${session.executionRootDirectory}/distribution</directory>
                  <includes>
                    <include>${controller.dist.name}.tar.gz</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-pre-wm-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docker.pre.wm.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${docker.pre.wm.image.src.root}</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${session.executionRootDirectory}/distribution</directory>
                  <includes>
                    <include>${pre.wm.dist.name}.tar.gz</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-post-wm-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docker.post.wm.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${docker.post.wm.image.src.root}</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${session.executionRootDirectory}/distribution</directory>
                  <includes>
                    <include>${post.wm.dist.name}.tar.gz</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-participant-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docker.participant.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${docker.participant.image.src.root}</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${session.executionRootDirectory}/distribution</directory>
                  <includes>
                    <include>${participant.dist.name}.tar.gz</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-email-monitor-resources</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docker.email.monitor.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${docker.email.monitor.image.src.root}</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${session.executionRootDirectory}/distribution</directory>
                  <includes>
                    <include>${email.monitor.dist.name}.tar.gz</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.33.0</version>
        <configuration>
          <verbose>true</verbose>
          <images>
            <image>
              <name>airavata/api-server</name>
              <build>
                <dockerFile>${docker.api.server.build.directory}/Dockerfile</dockerFile>
              </build>
            </image>
            <image>
              <name>airavata/controller</name>
              <build>
                <dockerFile>${docker.controller.build.directory}/Dockerfile</dockerFile>
              </build>
            </image>
            <image>
              <name>airavata/pre-wm</name>
              <build>
                <dockerFile>${docker.pre.wm.build.directory}/Dockerfile</dockerFile>
              </build>
            </image>
            <image>
              <name>airavata/post-wm</name>
              <build>
                <dockerFile>${docker.post.wm.build.directory}/Dockerfile</dockerFile>
              </build>
            </image>
            <image>
              <name>airavata/participant</name>
              <build>
                <dockerFile>${docker.participant.build.directory}/Dockerfile</dockerFile>
              </build>
            </image>
            <image>
              <name>airavata/email-monitor</name>
              <build>
                <dockerFile>${docker.email.monitor.build.directory}/Dockerfile</dockerFile>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>


  <properties>

    <docker.api.server.build.directory>${project.build.directory}/api_server_docker_img_build</docker.api.server.build.directory>
    <docker.api.server.image.src.root>src/main/docker/api-server</docker.api.server.image.src.root>

    <docker.controller.build.directory>${project.build.directory}/controller_docker_img_build</docker.controller.build.directory>
    <docker.controller.image.src.root>src/main/docker/controller</docker.controller.image.src.root>

    <docker.pre.wm.build.directory>${project.build.directory}/pre_wm_docker_img_build</docker.pre.wm.build.directory>
    <docker.pre.wm.image.src.root>src/main/docker/pre-wm</docker.pre.wm.image.src.root>

    <docker.post.wm.build.directory>${project.build.directory}/post_wm_docker_img_build</docker.post.wm.build.directory>
    <docker.post.wm.image.src.root>src/main/docker/post-wm</docker.post.wm.image.src.root>

    <docker.participant.build.directory>${project.build.directory}/participant_docker_img_build</docker.participant.build.directory>
    <docker.participant.image.src.root>src/main/docker/participant</docker.participant.image.src.root>

    <docker.email.monitor.build.directory>${project.build.directory}/email_monitor_docker_img_build</docker.email.monitor.build.directory>
    <docker.email.monitor.image.src.root>src/main/docker/email-monitor</docker.email.monitor.image.src.root>

    <api.server.dist.name>apache-airavata-api-server-${project.version}</api.server.dist.name>
    <controller.dist.name>apache-airavata-controller-${project.version}</controller.dist.name>
    <participant.dist.name>apache-airavata-participant-${project.version}</participant.dist.name>
    <pre.wm.dist.name>apache-airavata-pre-wm-${project.version}</pre.wm.dist.name>
    <post.wm.dist.name>apache-airavata-post-wm-${project.version}</post.wm.dist.name>
    <parser.wm.dist.name>apache-airavata-parser-wm-${project.version}</parser.wm.dist.name>
    <email.monitor.dist.name>apache-airavata-email-monitor-${project.version}</email.monitor.dist.name>
    <realtime.monitor.dist.name>apache-airavata-realtime-monitor-${project.version}</realtime.monitor.dist.name>
    <sharing.registry.dist.name>apache-airavata-sharing-registry-${project.version}</sharing.registry.dist.name>
  </properties>
</project>