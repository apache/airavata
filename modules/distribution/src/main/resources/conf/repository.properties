#
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#

#
# Properties for JCR Registry interface. By default, Apache Jackrabbit is used.
#
#jcr.class=org.apache.jackrabbit.core.RepositoryFactoryImpl
jcr.class=org.apache.jackrabbit.rmi.repository.RmiRepositoryFactory
org.apache.jackrabbit.repository.uri=http://localhost:8081/rmi
jcr.user=admin
jcr.pass=admin


#
# Class which implemented Scheduler interface. It will be used to determine a Provider
#
scheduler.class= org.apache.airavata.core.gfac.scheduler.impl.SchedulerImpl

#
# Data Service Plugins classes
#
datachain.classes= org.apache.airavata.core.gfac.extension.data.RegistryDataService

#
# Pre execution Plugins classes. For example, GridFTP Input Staging
#
prechain.classes= org.apache.airavata.core.gfac.extension.pre.GridFtpInputStaging 
prechain.classes= org.apache.airavata.core.gfac.extension.pre.HttpInputStaging

#
# Post execution Plugins classes. For example, GridFTP Output Staging
#
postchain.classes= org.apache.airavata.core.gfac.extension.post.GridFtpOutputStaging
postchain.classes= org.apache.airavata.core.gfac.extension.post.OutputRegister
trusted.cert.location=/Users/lahirugunathilake/Downloads/certificates

#Configuring your implementation for Provenance Registry, if you have a implementation for AiravataProvenanceRegstry put the
#full qualified path name to property name class.provenance.registry.accessor,
#We have a mysql JPA provenanceRegistry implementation built in but you can write your own
#class.provenance.registry.accessor=org.apache.airavata.provenance.impl.jpa.AiravataJPAProvenanceRegistry

#
# SSH private key location. It will be used by SSHProvider
#
# ssh.key=/home/user/.ssh/id_rsa
# ssh.keypass=
# ssh.username=usernameAtHost

#
# MyProxy credential. It will be used by GridFTP Plugins and GramProvider.
#
myproxy.server=myproxy.teragrid.org
myproxy.user=username
myproxy.pass=password
myproxy.life=3600
#Port details will be used by gfac-axis2 when deployed on tomcat
port=8080
#ip=192.2.33.12 if you configure the ip we will pick this ip address rather picking it from axisconfiguration

#Registry Configuration
class.registry.accessor=org.apache.airavata.persistance.registry.jpa.impl.AiravataJPARegistry
registry.user=admin
registry.password=admin
gateway.id=default
registry.jdbc.driver=com.mysql.jdbc.Driver
registry.jdbc.user=airavata
registry.jdbc.password=airavata
registry.jdbc.url=jdbc:mysql://localhost:3306/persistent_data

#for derby database
#registry.jdbc.driver=org.apache.derby.jdbc.EmbeddedDriver
#registry.jdbc.url=jdbc:derby:persistent_data

