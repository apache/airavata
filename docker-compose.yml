version: '3.8'

services:
  airavata-monolithic:
    image: airavata-monolithic:latest
    container_name: airavata-monolithic-test
    ports:
      - "8930:8930"  # Airavata API (Thrift RPC)
      - "8050:8050"  # File Server (Thrift RPC)
      - "18800:18800"  # Agent Service (Thrift RPC)
      - "18889:18889"  # Research Service (Thrift RPC)
      - "19900:19900"  # Agent Service gRPC
      - "19908:19908"  # Research Service gRPC
    volumes:
      - ./airavata-server.properties:/opt/airavata/apache-airavata-api-server/conf/airavata-server.properties:ro
      - airavata-logs:/opt/airavata/logs
    environment:
      - JAVA_OPTS=-Xmx2g -Xms1g
      - zookeeper.server.connection=zookeeper:2181
      - kafka.broker.url=kafka:9092
      - rabbitmq.broker.url=amqp://guest:guest@rabbitmq:5672/%2F
      - appcatalog.jdbc.url=jdbc:mariadb://mariadb:3306/app_catalog
      - credential.store.jdbc.url=jdbc:mariadb://mariadb:3306/credential_store
      - registry.jdbc.url=jdbc:mariadb://mariadb:3306/experiment_catalog
      - replicacatalog.jdbc.url=jdbc:mariadb://mariadb:3306/replica_catalog
      - sharingcatalog.jdbc.url=jdbc:mariadb://mariadb:3306/sharing_catalog
      - workflowcatalog.jdbc.url=jdbc:mariadb://mariadb:3306/workflow_catalog
      - profile.service.jdbc.url=jdbc:mariadb://mariadb:3306/profile_service
      # Monitoring host configurations
      - api.server.monitoring.host=0.0.0.0
      - participant.monitoring.host=0.0.0.0
      - post.workflow.manager.monitoring.host=0.0.0.0
      - pre.workflow.manager.monitoring.host=0.0.0.0
      - orchestrator.server.host=0.0.0.0
      - profile.service.server.host=0.0.0.0
      - credential.store.server.host=0.0.0.0
      - regserver.server.host=0.0.0.0
      - sharing.registry.server.host=0.0.0.0
      # Additional configurations to fix Orchestrator startup
      - embedded.zk=false
      - helix.cluster.name=AiravataCluster
      - helix.controller.name=AiravataController
      - helix.participant.name=AiravataParticipant
      - enable.sharing=true
      - enable.validation=true
      - job.notification.enable=true
      - job.notification.emailids=
      - data.parser.delete.container=true
      - data.parser.storage.resource.id=CHANGE_ME
      - local.data.location=/tmp
      - TLS.enabled=false
      - authz.cache.enabled=true
      # Disable services that are missing classes
      - agent.service.enabled=false
      - file.service.enabled=false
      - research.service.enabled=false
      # Email monitor configuration
      - email.monitor.config.file=/opt/airavata/apache-airavata-api-server/conf/email-config.yaml
      # Additional Helix configurations
      - helix.zk.connection.timeout=30000
      - helix.zk.session.timeout=30000
      - helix.zk.retry.interval=1000
      - helix.zk.max.retries=3
    extra_hosts:
      - "airavata.host:127.0.0.1"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - mariadb
      - rabbitmq
      - zookeeper
      - kafka
    networks:
      - airavata-network

  mariadb:
    image: mariadb:10.11
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: airavata
      MYSQL_USER: airavata
      MYSQL_PASSWORD: airavata_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - airavata-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: airavata-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - airavata-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: airavata-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - airavata-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: airavata-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - airavata-network

volumes:
  mysql-data:
  rabbitmq-data:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
  airavata-logs:

networks:
  airavata-network:
    driver: bridge
